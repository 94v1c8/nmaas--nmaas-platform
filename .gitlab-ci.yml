stages:
  - test
  - sonar
  - build

test:
  stage: test
  image: openjdk:11-jdk-slim
  tags:
    - docker
  script:
    - chmod +x ./gradlew
    - ./gradlew -Dorg.gradle.daemon=false test
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' $CI_PROJECT_DIR/build/jacocoCsv
  coverage: '/([0-9]{1,3}.[0-9]*).%.covered/'
  artifacts:
    reports:
      junit: build/test-results/**/TEST-*.xml

sonar:
  stage: sonar
  image: openjdk:11-jdk-slim
#  only:
#    - develop
  script:
    - chmod +x ./gradlew
    - ./gradlew integrationTest jacocoTestCoverageVerification
    - ./gradlew -Dsonar.host.url=${SONAR_HOST} -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.projectName=${SONAR_PROJECT_NAME} -Dsonar.branch.name=develop -Dsonar.login=${SONAR_LOGIN_TOKEN} sonarqube

build_and_push_latest_image:
  stage: build
#  only:
#    - develop
  variables:
    IMAGE_TAG: "latest"
  script:
    - |
      docker image prune -f
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REPOSITORY
      docker build -t $DOCKER_REPOSITORY_LOCAL:$IMAGE_TAG .
      docker push $DOCKER_REPOSITORY_LOCAL:$IMAGE_TAG
      docker logout $DOCKER_REPOSITORY