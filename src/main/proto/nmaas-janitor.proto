syntax = "proto3";
package v1;

option java_package = "net.geant.nmaas.externalservices.inventory.janitor";
option java_outer_classname = "JanitorManager";

enum Status {
    FAILED = 0;
    OK = 1;
    PENDING = 2;
}

message Instance {
    string namespace = 1;
    string uid = 2;
    string domain = 3;
}

message Credentials {
    string user = 1;
    string password = 2;
}

message PodInfo {
    string name = 1;
    string displayName = 2;
}

message InstanceRequest {
    string api = 1;
    Instance deployment = 2;
}

message PodRequest {
    string api = 1;
    Instance deployment = 2;
    PodInfo pod = 3;
}

message ServiceResponse {
    string api = 1;
    Status status = 2;
    string message = 3;
}

message InfoServiceResponse {
    string api = 1;
    Status status = 2;
    string message = 3;
    string info = 4;
}

message InstanceCredentialsRequest {
    string api = 1;
    Instance instance = 2;
    Credentials credentials = 3;
}

message PodListResponse {
    string api = 1;
    Status status = 2;
    string message = 3;
    repeated PodInfo pods = 4;
}

message PodLogsResponse {
    string api = 1;
    Status status = 2;
    string message = 3;
    repeated string lines = 4;
}

service ConfigService {
    rpc CreateOrReplace(InstanceRequest) returns (ServiceResponse);
    rpc DeleteIfExists(InstanceRequest) returns (ServiceResponse);
}

service BasicAuthService {
    rpc CreateOrReplace(InstanceCredentialsRequest) returns (ServiceResponse);
    rpc DeleteIfExists(InstanceRequest) returns (ServiceResponse);
}

service CertManagerService {
    rpc DeleteIfExists(InstanceRequest) returns (ServiceResponse);
}

service ReadinessService {
    rpc CheckIfReady(InstanceRequest) returns (ServiceResponse);
}

service InformationService {
    rpc RetrieveServiceIp(InstanceRequest) returns (InfoServiceResponse);
    rpc CheckServiceExists(InstanceRequest) returns (InfoServiceResponse);
}

service PodService {
    rpc RetrievePodList(InstanceRequest) returns (PodListResponse);
    rpc RetrievePodLogs(PodRequest) returns (PodLogsResponse);
}