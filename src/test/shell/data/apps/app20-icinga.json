{
    "applicationBase": {
        "id": null,
        "name": "Icinga2",
        "license": "GPL 2.0",
        "licenseUrl": "https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt",
        "wwwUrl": "https://icinga.com",
        "sourceUrl": "https://github.com/Icinga/icinga2",
        "issuesUrl": "https://github.com/Icinga/icinga2/issues",
        "nmaasDocumentationUrl": "https://wiki.geant.org/display/NMAAS/NMaaS+Tools#NMaaSTools-Icinga2",
        "descriptions": [
            {
                "language": "en",
                "briefDescription": "Scalable and extensible monitoring system",
                "fullDescription": "Icinga is a monitoring system which checks the availability of your network resources, notifies users of outages, and generates performance data for reporting. Scalable and extensible, Icinga can monitor large, complex environments across multiple locations. <br><br>Icinga 2 is the monitoring server and requires Icinga Web 2 on top in your Icinga Stack, which is already included as part of the NMaaS deployment. <br><br>The configuration can be easily managed with either the Icinga Director, config management tools or plain text within the Icinga DSL."
            },
            {
                "language": "de",
                "briefDescription": "Scalable and extensible monitoring system",
                "fullDescription": "Icinga is a monitoring system which checks the availability of your network resources, notifies users of outages, and generates performance data for reporting. Scalable and extensible, Icinga can monitor large, complex environments across multiple locations. <br><br>Icinga 2 is the monitoring server and requires Icinga Web 2 on top in your Icinga Stack, which is already included as part of the NMaaS deployment. <br><br>The configuration can be easily managed with either the Icinga Director, config management tools or plain text within the Icinga DSL."
            },
            {
                "language": "fr",
                "briefDescription": "Scalable and extensible monitoring system",
                "fullDescription": "Icinga is a monitoring system which checks the availability of your network resources, notifies users of outages, and generates performance data for reporting. Scalable and extensible, Icinga can monitor large, complex environments across multiple locations. <br><br>Icinga 2 is the monitoring server and requires Icinga Web 2 on top in your Icinga Stack, which is already included as part of the NMaaS deployment. <br><br>The configuration can be easily managed with either the Icinga Director, config management tools or plain text within the Icinga DSL."
            },
            {
                "language": "pl",
                "briefDescription": "Scalable and extensible monitoring system",
                "fullDescription": "Icinga is a monitoring system which checks the availability of your network resources, notifies users of outages, and generates performance data for reporting. Scalable and extensible, Icinga can monitor large, complex environments across multiple locations. <br><br>Icinga 2 is the monitoring server and requires Icinga Web 2 on top in your Icinga Stack, which is already included as part of the NMaaS deployment. <br><br>The configuration can be easily managed with either the Icinga Director, config management tools or plain text within the Icinga DSL."
            }
        ],
        "tags": [
            "monitoring",
            "visualization",
            "alerting"
        ]
    },
    "application": {
        "id": null,
        "name": "Icinga2",
        "version": "2.11.4",
        "configWizardTemplate": {
            "template": {
                "components": [
                    {
                        "label": "Tabs",
                        "components": [
                            {
                                "label": "Base",
                                "key": "configTab",
                                "components": [
                                    {
                                        "label": "Mandatory parameters",
                                        "hideLabel": true,
                                        "type": "container",
                                        "input": true,
                                        "tab": 0,
                                        "key": "mandatoryParameters",
                                        "components": [
                                            {
                                                "label": "Default web admin user",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "env#ICINGAWEB2_ADMIN_USER",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Default web admin password",
                                                "type": "password",
                                                "input": true,
                                                "key": "env#ICINGAWEB2_ADMIN_PASS",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Allocated configuration directory storage (GB)",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "persistence#size",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "defaultValue": "1Gi",
                                                "placeholder": "Default value: 1Gi",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Allocated SQL database storage (GB)",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "mariadb#primary#persistence#size",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "defaultValue": "16Gi",
                                                "placeholder": "Default value: 16Gi",
                                                "inputFormat": "plain"
                                            }
                                        ]
                                    },
                                    {
                                        "label": "Configuration",
                                        "hideLabel": true,
                                        "tableView": true,
                                        "type": "container",
                                        "input": true,
                                        "tab": 0,
                                        "key": "configuration",
                                        "components": [
                                            {
                                                "label": "Email address for sending email alerts",
                                                "type": "email",
                                                "input": true,
                                                "key": "notificationsEmail",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "inputFormat": "plain"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "type": "tabs",
                        "input": false,
                        "key": "tabs"
                    },
                    {
                        "type": "button",
                        "label": "Apply configuration",
                        "disableOnInvalid": true,
                        "theme": "primary",
                        "input": false,
                        "tableView": true
                    }
                ]
            }
        },
        "configUpdateWizardTemplate": null,
        "appDeploymentSpec": {
            "supportedDeploymentEnvironments": [
                "KUBERNETES"
            ],
            "kubernetesTemplate": {
                "chart": {
                    "name": "nmaas-icinga2",
                    "version": "2.0.1"
                }
            },
            "deployParameters": {
                "DOMAIN_CODENAME": "metallb.subnetName=%VALUE%"
            },
            "globalDeployParameters": {
                "manualConfig": "false"
            },
            "storageVolumes": [],
            "exposesWebUI": true,
            "allowSshAccess": false,
            "accessMethods": [
                {
                    "type": "DEFAULT",
                    "name": "Icinga",
                    "tag": "icinga",
                    "deployParameters": {
                        "INGRESS_ENABLED": "ingress.enabled",
                        "INGRESS_HOSTS": "ingress.hosts",
                        "INGRESS_CLASS": "ingress.class",
                        "INGRESS_TLS_ENABLED": "ingress.tls.enabled"
                    }
                },
                {
                    "type": "INTERNAL",
                    "name": "API",
                    "tag": "api",
                    "deployParameters": {
                        "K8S_SERVICE_SUFFIX": "api",
                        "K8S_SERVICE_PORT": "5665"
                    }
                }
            ]
        },
        "appConfigurationSpec": {
            "configFileRepositoryRequired": true,
            "configUpdateEnabled": true,
            "templates": [
                {
                    "configFileName": "app.conf",
                    "configFileTemplateContent": "object IcingaApplication \"app\" { }"
                },
                {
                    "configFileName": "apt.conf",
                    "configFileTemplateContent": "apply Service \"apt\" {\n  import \"generic-service\"\n\n  check_command = \"apt\"\n\n  assign where host.name == NodeName\n}"
                },
                {
                    "configFileName": "commands.conf",
                    "configFileTemplateContent": "/* Command objects */\n\n/* Notification Commands\n *\n * Please check the documentation for all required and\n * optional parameters.\n */\n\nobject NotificationCommand \"mail-host-notification\" {\n  command = [ ConfigDir + \"/scripts/mail-host-notification.sh\" ]\n\n  arguments += {\n\t\"-4\" = \"$notification_address$\"\n\t\"-6\" = \"$notification_address6$\"\n\t\"-b\" = \"$notification_author$\"\n\t\"-c\" = \"$notification_comment$\"\n\t\"-d\" = {\n\t  required = true\n\t  value = \"$notification_date$\"\n\t}\n\t\"-f\" = {\n\t  value = \"$notification_from$\"\n\t  description = \"Set from address. Requires GNU mailutils (Debian/Ubuntu) or mailx (RHEL/SUSE)\"\n\t}\n\t\"-i\" = \"$notification_icingaweb2url$\"\n\t\"-l\" = {\n\t  required = true\n\t  value = \"$notification_hostname$\"\n\t}\n\t\"-n\" = {\n\t  required = true\n\t  value = \"$notification_hostdisplayname$\"\n\t}\n\t\"-o\" = {\n\t  required = true\n\t  value = \"$notification_hostoutput$\"\n\t}\n\t\"-r\" = {\n\t  required = true\n\t  value = \"$notification_useremail$\"\n\t}\n\t\"-s\" = {\n\t  required = true\n\t  value = \"$notification_hoststate$\"\n\t}\n\t\"-t\" = {\n\t  required = true\n\t  value = \"$notification_type$\"\n\t}\n\t\"-v\" = \"$notification_logtosyslog$\"\n  }\n\n  vars += {\n\tnotification_address = \"$address$\"\n\tnotification_address6 = \"$address6$\"\n\tnotification_author = \"$notification.author$\"\n\tnotification_comment = \"$notification.comment$\"\n\tnotification_type = \"$notification.type$\"\n\tnotification_date = \"$icinga.long_date_time$\"\n\tnotification_hostname = \"$host.name$\"\n\tnotification_hostdisplayname = \"$host.display_name$\"\n\tnotification_hostoutput = \"$host.output$\"\n\tnotification_hoststate = \"$host.state$\"\n\tnotification_useremail = \"$user.email$\"\n  }\n}\n\nobject NotificationCommand \"mail-service-notification\" {\n  command = [ ConfigDir + \"/scripts/mail-service-notification.sh\" ]\n\n  arguments += {\n\t\"-4\" = \"$notification_address$\"\n\t\"-6\" = \"$notification_address6$\"\n\t\"-b\" = \"$notification_author$\"\n\t\"-c\" = \"$notification_comment$\"\n\t\"-d\" = {\n\t  required = true\n\t  value = \"$notification_date$\"\n\t}\n\t\"-e\" = {\n\t  required = true\n\t  value = \"$notification_servicename$\"\n\t}\n\t\"-f\" = {\n\t  value = \"$notification_from$\"\n\t  description = \"Set from address. Requires GNU mailutils (Debian/Ubuntu) or mailx (RHEL/SUSE)\"\n\t}\n\t\"-i\" = \"$notification_icingaweb2url$\"\n\t\"-l\" = {\n\t  required = true\n\t  value = \"$notification_hostname$\"\n\t}\n\t\"-n\" = {\n\t  required = true\n\t  value = \"$notification_hostdisplayname$\"\n\t}\n\t\"-o\" = {\n\t  required = true\n\t  value = \"$notification_serviceoutput$\"\n\t}\n\t\"-r\" = {\n\t  required = true\n\t  value = \"$notification_useremail$\"\n\t}\n\t\"-s\" = {\n\t  required = true\n\t  value = \"$notification_servicestate$\"\n\t}\n\t\"-t\" = {\n\t  required = true\n\t  value = \"$notification_type$\"\n\t}\n\t\"-u\" = {\n\t  required = true\n\t  value = \"$notification_servicedisplayname$\"\n\t}\n\t\"-v\" = \"$notification_logtosyslog$\"\n  }\n\n  vars += {\n\tnotification_address = \"$address$\"\n\tnotification_address6 = \"$address6$\"\n\tnotification_author = \"$notification.author$\"\n\tnotification_comment = \"$notification.comment$\"\n\tnotification_type = \"$notification.type$\"\n\tnotification_date = \"$icinga.long_date_time$\"\n\tnotification_hostname = \"$host.name$\"\n\tnotification_hostdisplayname = \"$host.display_name$\"\n\tnotification_servicename = \"$service.name$\"\n\tnotification_serviceoutput = \"$service.output$\"\n\tnotification_servicestate = \"$service.state$\"\n\tnotification_useremail = \"$user.email$\"\n\tnotification_servicedisplayname = \"$service.display_name$\"\n  }\n}\n\n/*\n * If you prefer to use the notification scripts with environment\n * variables instead of command line parameters, you can use\n * the following commands. They have been updated from < 2.7\n * to support the new notification scripts and should help\n * with an upgrade.\n * Remove the comment blocks and comment the notification commands above.\n */\n\n/*\n\nobject NotificationCommand \"mail-host-notification\" {\n  command = [ ConfigDir + \"/scripts/mail-host-notification.sh\" ]\n\n  env = {\n\tNOTIFICATIONTYPE = \"$notification.type$\"\n\tHOSTDISPLAYNAME = \"$host.display_name$\"\n\tHOSTNAME = \"$host.name$\"\n\tHOSTADDRESS = \"$address$\"\n\tHOSTSTATE = \"$host.state$\"\n\tLONGDATETIME = \"$icinga.long_date_time$\"\n\tHOSTOUTPUT = \"$host.output$\"\n\tNOTIFICATIONAUTHORNAME = \"$notification.author$\"\n\tNOTIFICATIONCOMMENT = \"$notification.comment$\"\n\tHOSTDISPLAYNAME = \"$host.display_name$\"\n\tUSEREMAIL = \"$user.email$\"\n  }\n}\n\nobject NotificationCommand \"mail-service-notification\" {\n  command = [ ConfigDir + \"/scripts/mail-service-notification.sh\" ]\n\n  env = {\n\tNOTIFICATIONTYPE = \"$notification.type$\"\n\tSERVICENAME = \"$service.name$\"\n\tHOSTNAME = \"$host.name$\"\n\tHOSTDISPLAYNAME = \"$host.display_name$\"\n\tHOSTADDRESS = \"$address$\"\n\tSERVICESTATE = \"$service.state$\"\n\tLONGDATETIME = \"$icinga.long_date_time$\"\n\tSERVICEOUTPUT = \"$service.output$\"\n\tNOTIFICATIONAUTHORNAME = \"$notification.author$\"\n\tNOTIFICATIONCOMMENT = \"$notification.comment$\"\n\tHOSTDISPLAYNAME = \"$host.display_name$\"\n\tSERVICEDISPLAYNAME = \"$service.display_name$\"\n\tUSEREMAIL = \"$user.email$\"\n  }\n}\n\n*/\n"
                },
                {
                    "configFileName": "downtimes.conf",
                    "configFileTemplateContent": "/**\n * The example downtime apply rule.\n */\n\napply ScheduledDowntime \"backup-downtime\" to Service {\n  author = \"icingaadmin\"\n  comment = \"Scheduled downtime for backup\"\n\n  ranges = {\n    monday = service.vars.backup_downtime\n    tuesday = service.vars.backup_downtime\n    wednesday = service.vars.backup_downtime\n    thursday = service.vars.backup_downtime\n    friday = service.vars.backup_downtime\n    saturday = service.vars.backup_downtime\n    sunday = service.vars.backup_downtime\n  }\n\n  assign where service.vars.backup_downtime != \"\"\n}"
                },
                {
                    "configFileName": "groups.conf",
                    "configFileTemplateContent": "/**\n * Host group examples.\n */\n\nobject HostGroup \"linux-servers\" {\n  display_name = \"Linux Servers\"\n\n  assign where host.vars.os == \"Linux\"\n}\n\nobject HostGroup \"windows-servers\" {\n  display_name = \"Windows Servers\"\n\n  assign where host.vars.os == \"Windows\"\n}\n\n/**\n * Service group examples.\n */\n\nobject ServiceGroup \"ping\" {\n  display_name = \"Ping Checks\"\n\n  assign where match(\"ping*\", service.name)\n}\n\nobject ServiceGroup \"http\" {\n  display_name = \"HTTP Checks\"\n\n  assign where match(\"http*\", service.check_command)\n}\n\nobject ServiceGroup \"disk\" {\n  display_name = \"Disk Checks\"\n\n  assign where match(\"disk*\", service.check_command)\n}"
                },
                {
                    "configFileName": "hosts.conf",
                    "configFileTemplateContent": "/*\n * Host definitions with object attributes\n * used for apply rules for Service, Notification,\n * Dependency and ScheduledDowntime objects.\n *\n * Tip: Use `icinga2 object list --type Host` to\n * list all host objects after running\n * configuration validation (`icinga2 daemon -C`).\n */\n\n/*\n * This is an example host based on your\n * local host's FQDN. Specify the NodeName\n * constant in `constants.conf` or use your\n * own description, e.g. \"db-host-1\".\n */"
                },
                {
                    "configFileName": "notifications.conf",
                    "configFileTemplateContent": "/**\n * The example notification apply rules.\n *\n * Only applied if host/service objects have\n * the custom variable `notification` defined\n * and containing `mail` as key.\n *\n * Check `hosts.conf` for an example.\n */\n\napply Notification \"mail-icingaadmin\" to Host {\n  import \"mail-host-notification\"\n  user_groups = host.vars.notification.mail.groups\n  users = host.vars.notification.mail.users\n\n  //interval = 2h\n\n  //vars.notification_logtosyslog = true\n\n  assign where host.vars.notification.mail\n}\n\napply Notification \"mail-icingaadmin\" to Service {\n  import \"mail-service-notification\"\n  user_groups = host.vars.notification.mail.groups\n  users = host.vars.notification.mail.users\n\n  //interval = 2h\n\n  //vars.notification_logtosyslog = true\n\n  assign where host.vars.notification.mail\n}"
                },
                {
                    "configFileName": "services.conf",
                    "configFileTemplateContent": "/*\n * Service apply rules.\n *\n * The CheckCommand objects `ping4`, `ping6`, etc\n * are provided by the plugin check command templates.\n * Check the documentation for details.\n *\n * Tip: Use `icinga2 object list --type Service` to\n * list all service objects after running\n * configuration validation (`icinga2 daemon -C`).\n */\n\n/*\n * This is an example host based on your\n * local host's FQDN. Specify the NodeName\n * constant in `constants.conf` or use your\n * own description, e.g. \"db-host-1\".\n */\n\n/*\n * These are generic `ping4` and `ping6`\n * checks applied to all hosts having the\n * `address` resp. `address6` attribute\n * defined.\n */\napply Service \"ping4\" {\n  import \"generic-service\"\n\n  check_command = \"ping4\"\n\n  assign where host.address\n}\n\n/*\n * Apply the `ssh` service to all hosts\n * with the `address` attribute defined and\n * the custom variable `os` set to `Linux`.\n */\napply Service \"ssh\" {\n  import \"generic-service\"\n\n  check_command = \"ssh\"\n\n  assign where (host.address || host.address6) && host.vars.os == \"Linux\"\n}\n\n\n\napply Service for (http_vhost => config in host.vars.http_vhosts) {\n  import \"generic-service\"\n\n  check_command = \"http\"\n\n  vars += config\n}\n\napply Service for (disk => config in host.vars.disks) {\n  import \"generic-service\"\n\n  check_command = \"disk\"\n\n  vars += config\n}\n\napply Service \"icinga\" {\n  import \"generic-service\"\n\n  check_command = \"icinga\"\n\n  assign where host.name == NodeName\n}\n\napply Service \"load\" {\n  import \"generic-service\"\n\n  check_command = \"load\"\n\n  /* Used by the ScheduledDowntime apply rule in `downtimes.conf`. */\n  vars.backup_downtime = \"02:00-03:00\"\n\n  assign where host.name == NodeName\n}\n\napply Service \"procs\" {\n  import \"generic-service\"\n\n  check_command = \"procs\"\n\n  assign where host.name == NodeName\n}\n\napply Service \"swap\" {\n  import \"generic-service\"\n\n  check_command = \"swap\"\n\n  assign where host.name == NodeName\n}\n\napply Service \"users\" {\n  import \"generic-service\"\n\n  check_command = \"users\"\n\n  assign where host.name == NodeName\n}"
                },
                {
                    "configFileName": "templates.conf",
                    "configFileTemplateContent": "/*\n * Generic template examples.\n */\n\n\n/**\n * Provides default settings for hosts. By convention\n * all hosts should import this template.\n *\n * The CheckCommand object `hostalive` is provided by\n * the plugin check command templates.\n * Check the documentation for details.\n */\ntemplate Host \"generic-host\" {\n  max_check_attempts = 3\n  check_interval = 1m\n  retry_interval = 30s\n\n  check_command = \"hostalive\"\n}\n\n/**\n * Provides default settings for services. By convention\n * all services should import this template.\n */\ntemplate Service \"generic-service\" {\n  max_check_attempts = 5\n  check_interval = 1m\n  retry_interval = 30s\n}\n\n/**\n * Provides default settings for users. By convention\n * all users should inherit from this template.\n */\n\ntemplate User \"generic-user\" {\n\n}\n\n/**\n * Provides default settings for host notifications.\n * By convention all host notifications should import\n * this template.\n */\ntemplate Notification \"mail-host-notification\" {\n  command = \"mail-host-notification\"\n\n  states = [ Up, Down ]\n  types = [ Problem, Acknowledgement, Recovery, Custom,\n\t\t\tFlappingStart, FlappingEnd,\n\t\t\tDowntimeStart, DowntimeEnd, DowntimeRemoved ]\n\n  vars += {\n\t// notification_icingaweb2url = \"https://www.example.com/icingaweb2\"\n\t// notification_from = \"Icinga 2 Host Monitoring <icinga@example.com>\"\n\tnotification_logtosyslog = false\n  }\n\n  period = \"24x7\"\n}\n\n/**\n * Provides default settings for service notifications.\n * By convention all service notifications should import\n * this template.\n */\ntemplate Notification \"mail-service-notification\" {\n  command = \"mail-service-notification\"\n\n  states = [ OK, Warning, Critical, Unknown ]\n  types = [ Problem, Acknowledgement, Recovery, Custom,\n\t\t\tFlappingStart, FlappingEnd,\n\t\t\tDowntimeStart, DowntimeEnd, DowntimeRemoved ]\n\n  vars += {\n\t// notification_icingaweb2url = \"https://www.example.com/icingaweb2\"\n\t// notification_from = \"Icinga 2 Service Monitoring <icinga@example.com>\"\n\tnotification_logtosyslog = false\n  }\n\n  period = \"24x7\"\n}"
                },
                {
                    "configFileName": "timeperiods.conf",
                    "configFileTemplateContent": "/**\n * Sample timeperiods for Icinga 2.\n * Check the documentation for details.\n */\n\nobject TimePeriod \"24x7\" {\n  display_name = \"Icinga 2 24x7 TimePeriod\"\n  ranges = {\n    \"monday\" \t= \"00:00-24:00\"\n    \"tuesday\" \t= \"00:00-24:00\"\n    \"wednesday\" = \"00:00-24:00\"\n    \"thursday\" \t= \"00:00-24:00\"\n    \"friday\" \t= \"00:00-24:00\"\n    \"saturday\" \t= \"00:00-24:00\"\n    \"sunday\" \t= \"00:00-24:00\"\n  }\n}\n\nobject TimePeriod \"9to5\" {\n  display_name = \"Icinga 2 9to5 TimePeriod\"\n  ranges = {\n    \"monday\" \t= \"09:00-17:00\"\n    \"tuesday\" \t= \"09:00-17:00\"\n    \"wednesday\" = \"09:00-17:00\"\n    \"thursday\" \t= \"09:00-17:00\"\n    \"friday\" \t= \"09:00-17:00\"\n  }\n}\n\nobject TimePeriod \"never\" {\n  display_name = \"Icinga 2 never TimePeriod\"\n  ranges = {\n  }\n}"
                },
                {
                    "configFileName": "users.conf",
                    "configFileTemplateContent": "/**\n * The example user 'icingaadmin' and the example\n * group 'icingaadmins'.\n */\n\nobject User \"icingaadmin\" {\n  import \"generic-user\"\n\n  display_name = \"Icinga 2 Admin\"\n  groups = [ \"icingaadmins\" ]\n\n  email = \"${notificationsEmail}\"\n}\n\nobject UserGroup \"icingaadmins\" {\n  display_name = \"Icinga 2 Admin Group\"\n}"
                }
            ]
        }
    }
}
