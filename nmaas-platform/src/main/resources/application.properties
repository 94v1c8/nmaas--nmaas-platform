# Active profiles
# profiles are used to indicate which container orchestrator should be used
#(three options are available: docker-engine, docker-compose, kubernetes)
spring.profiles.active=docker-engine

# General settings
# ----------------
portal.url=http://portal.nmaas.gn4.net
server.port=9000

# NMaaS application deployment and configuration processes
# --------------------------------------------------------
nmaas.service.deployment.check.interval=10

# Logging
logging.file=log/nmaas.log
logging.level.org.springframework=DEBUG

# Application configuration file download
# ---------------------------------------
# Username to be used by the Platform to connect to Docker Host (SSH keys are assumed to be exchanges to no password is required)
app.config.ssh.username=nmaasconfig
# Complete URL of a REST endpoint for downloading application configuration files
app.config.download.url=${portal.url}:${server.port}/platform/api/configs/
# Basic auth username for downloading application configuration files
app.config.download.client.username=configTest
# Basic auth password for downloading application configuration files
app.config.download.client.password=24t##GAqg5!

# Docker Compose file download
# ----------------------------
# Username to be used by the Platform to connect to Docker Host (SSH keys are assumed to be exchanges to no password is required)
app.compose.ssh.username=nmaasconfig
# Complete URL of a REST endpoint for downloading Docker Compose files
app.compose.download.url=${portal.url}:${server.port}/platform/api/dockercompose/files/
# Basic auth username for downloading Docker Compose files
app.compose.download.client.username=composeTest
# Basic auth password for downloading Docker Compose files
app.compose.download.client.password=24t##GAqg5!

# Kubernetes cluster
# ------------------
# Address of the host on which helm is installed
kubernetes.helm.host=10.134.241.6
# Username to be used by the Platform to connect to Helm host (SSH keys are assumed to be exchanges to no password is required)
kubernetes.helm.ssh.username=nmaas
# Flag indicating whether to use local chart tar.gz files (when set to true) rather than chart repositories
kubernetes.helm.charts.use.local.archives=true
# Directory on the Helm host with all chart archives
kubernetes.helm.charts.directory=/home/nmaas/charts/
# Maximum deployment time (in seconds)
kubernetes.helm.install.max.duration=30
# Kubernetes namespace for NMaaS deployments
kubernetes.namespace=default

# DCN deployment with Ansible
# ---------------------------
# Global setting for DCN deployment mechanism mode. Available options: auto, manual, none.
dcn.deployment.mode=none
# Address of the Docker Host used to run Ansible containers
ansible.docker.host=10.134.250.6
# Port of the Ansible Docker remote API
ansible.docker.api.port=2375
# Complete URL of the Ansible Docker remote API
ansible.docker.api.url=http://${ansible.docker.host}:${ansible.docker.api.port}
# Ansible Docker image
ansible.docker.image=nmaas/ansible:2.3.0
# Name of Ansible playbook for configuring VPN on client facing router
ansible.playbook.client.router.config.add=pb-nmaas-vpn-asbr-config.yml
# Name of Ansible playbook for removing VPN on client facing router
ansible.playbook.client.router.config.rem=pb-nmaas-vpn-asbr-delete.yml
# Name of Ansible playbook for configuring VPN on cloud facing router
ansible.playbook.cloud.router.config.add=pb-nmaas-vpn-iaas-config.yml
# Name of Ansible playbook for removing VPN on cloud facing router
ansible.playbook.cloud.router.config.rem=pb-nmaas-vpn-iaas-delete.yml
# Basic auth username for posting notification about playbook executions
ansible.notification.client.username=ansibleTest
# Basic auth password for posting notification about playbook executions
ansible.notification.client.password=3taGqq#$Fsd

# market
upload.dir=/tmp

# in ms
jwt.tokenValidFor=3600000
jwt.refreshTokenValidFor=13600000
jwt.issuer=NMaaS
jwt.signingKey=testKey
