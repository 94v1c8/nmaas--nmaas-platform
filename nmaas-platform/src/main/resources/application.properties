#active profiles
#profiles are used to indicate which container orchestrator should be used
#(three options are available: docker-engine, docker-compose, kubernetes)
spring.profiles.active=docker-engine

#misc
portal.url=http://portal.nmaas.gn4.net
server.port=9000
spring.jackson.serialization.INDENT_OUTPUT=true

#market 
upload.dir=/tmp

#rest api
api.client.ansible.username=ansibleTest
api.client.ansible.password=3taGqq#$Fsd
api.client.config.download.username=configTest
api.client.config.download.password=24t##GAqg5!

#app configuration download
app.config.ssh.username=nmaasconfig
app.config.download.url=${portal.url}:${server.port}/platform/api/configs/

#docker compose file download
app.compose.ssh.username=nmaasconfig
app.compose.download.url=${portal.url}:${server.port}/platform/api/dockercompose/files/

#ansible
ansible.docker.host=10.134.250.6
ansible.docker.api.port=2375
ansible.docker.api.url=http://${ansible.docker.host}:${ansible.docker.api.port}
ansible.docker.image=nmaas/ansible:2.3.0
ansible.playbook.client.router.config.add=pb-nmaas-vpn-asbr-config.yml
ansible.playbook.client.router.config.rem=pb-nmaas-vpn-asbr-delete.yml
ansible.playbook.cloud.router.config.add=pb-nmaas-vpn-iaas-config.yml
ansible.playbook.cloud.router.config.rem=pb-nmaas-vpn-iaas-delete.yml

# in ms
jwt.tokenValidFor=3600000
jwt.refreshTokenValidFor=13600000
jwt.issuer=NMaaS
jwt.signingKey=testKey

#logging
logging.file=log/nmaas.log
logging.level.org.springframework=DEBUG
