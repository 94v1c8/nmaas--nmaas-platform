# --------------- #
# Active profiles #
# --------------- #
#   profiles are used to customise platform operations in following areas
#   - container orchestrator (options: env_docker-engine, env_docker-compose, env_kubernetes)
#   - dcn setup (options: dcn_ansible, dcn_manual, dcn_none)
#   - service configuration (options: conf_download, conf_repo)
#   - database (options: db_memory, db_standalone)
spring.profiles.active=env_docker-compose, dcn_ansible, conf_download, db_memory

# ---------------- #
# General settings #
# ---------------- #ó
portal.url=http://portal.nmaas.gn4.net
server.port=9000

# -------------------------------------------------------- #
# NMaaS application deployment and configuration processes #
# -------------------------------------------------------- #
nmaas.service.deployment.check.interval=10
nmaas.service.deployment.max.duration=30

# ------- #
# Logging #
# ------- #
logging.file=log/nmaas.log
logging.level.net.geant.nmaas=DEBUG
logging.level.net.geant.nmaas.portal.api.security=DEBUG
logging.level.org.springframework=DEBUG
logging.level.net.schmizz.sshj=ERROR

# --------------------------------------- #
# Application configuration file download #
# --------------------------------------- #
# Username to be used by the Platform to connect to Docker Host (SSH keys are assumed to be exchanges to no password is required)
app.config.ssh.username=nmaasconfig
# Complete URL of a REST endpoint for downloading application configuration files
app.config.download.url=${portal.url}:${server.port}/platform/api/configs/
# Basic auth username for downloading application configuration files
app.config.download.client.username=configTest
# Basic auth password for downloading application configuration files
app.config.download.client.password=testpass

# ---------------------------- #
# Docker Compose file download #
# ---------------------------- #
# Username to be used by the Platform to connect to Docker Host (SSH keys are assumed to be exchanges to no password is required)
app.compose.ssh.username=nmaasconfig
# Complete URL of a REST endpoint for downloading Docker Compose files
app.compose.download.url=${portal.url}:${server.port}/platform/api/dockercompose/files/
# Basic auth username for downloading Docker Compose files
app.compose.download.client.username=composeTest
# Basic auth password for downloading Docker Compose files
app.compose.download.client.password=testpass

# --------------------------- #
# DCN deployment with Ansible #
# --------------------------- #
# Address of the Docker Host used to run Ansible containers
ansible.docker.host=192.168.1.1
# Port of the Ansible Docker remote API
ansible.docker.api.port=2375
# Complete URL of the Ansible Docker remote API
ansible.docker.api.url=http://${ansible.docker.host}:${ansible.docker.api.port}
# Ansible Docker image
ansible.docker.image=nmaas/ansible:2.3.0
# Name of Ansible playbook for configuring VPN on client facing router
ansible.playbook.client.router.config.add=pb-nmaas-vpn-asbr-config.yml
# Name of Ansible playbook for removing VPN on client facing router
ansible.playbook.client.router.config.rem=pb-nmaas-vpn-asbr-delete.yml
# Name of Ansible playbook for configuring VPN on cloud facing router
ansible.playbook.cloud.router.config.add=pb-nmaas-vpn-iaas-config.yml
# Name of Ansible playbook for removing VPN on cloud facing router
ansible.playbook.cloud.router.config.rem=pb-nmaas-vpn-iaas-delete.yml
# Basic auth username for posting notification about playbook executions
ansible.notification.client.username=ansibleTest
# Basic auth password for posting notification about playbook executions
ansible.notification.client.password=testpass

# ----- #
# Other #
# ----- #
upload.dir=/tmp
jwt.tokenValidFor=3600000
jwt.refreshTokenValidFor=13600000
jwt.issuer=NMaaS
jwt.signingKey=testKey
