{
	"name":"pSConfigWebAdmin",
	"version":"4.2.2",
	"license":"Apache 2.0",
	"licenseUrl": "https://www.apache.org/licenses/LICENSE-2.0",
	"tags": [ "management", "configuration" ],
	"descriptions": [
		{
			"language": "en",
			"briefDescription": "pSConfig Web Admin (PWA) web-based UI for perfSONAR administrators",
			"fullDescription": "pSConfig Web Admin (PWA) is a web-based UI for perfSONAR administrators to define and publish MeshConfig/pSConfig meshes, which automates tests executed by test nodes, and provides topology information to various services, such as MadDash.<br>In addition to providing a user-friendly interface for creating pSConfig/MeshConfig output to define meshes, PWA allows multiple users to collaborate on the configuration of testspecs, host groups, and configs. Users can be designated super-admins or normal users, depending on how much access they need. It is also possible to allow users to edit some meshes, but not others."
		},
		{
			"language": "de",
			"briefDescription": "pSConfig Web Admin (PWA) web-based UI for perfSONAR administrators",
			"fullDescription": "pSConfig Web Admin (PWA) is a web-based UI for perfSONAR administrators to define and publish MeshConfig/pSConfig meshes, which automates tests executed by test nodes, and provides topology information to various services, such as MadDash.<br>In addition to providing a user-friendly interface for creating pSConfig/MeshConfig output to define meshes, PWA allows multiple users to collaborate on the configuration of testspecs, host groups, and configs. Users can be designated super-admins or normal users, depending on how much access they need. It is also possible to allow users to edit some meshes, but not others."
		},
		{
			"language": "fr",
			"briefDescription": "pSConfig Web Admin (PWA) web-based UI for perfSONAR administrators",
			"fullDescription": "pSConfig Web Admin (PWA) is a web-based UI for perfSONAR administrators to define and publish MeshConfig/pSConfig meshes, which automates tests executed by test nodes, and provides topology information to various services, such as MadDash.<br>In addition to providing a user-friendly interface for creating pSConfig/MeshConfig output to define meshes, PWA allows multiple users to collaborate on the configuration of testspecs, host groups, and configs. Users can be designated super-admins or normal users, depending on how much access they need. It is also possible to allow users to edit some meshes, but not others."
		},
		{
			"language": "pl",
			"briefDescription": "pSConfig Web Admin (PWA) web-based UI for perfSONAR administrators",
			"fullDescription": "pSConfig Web Admin (PWA) is a web-based UI for perfSONAR administrators to define and publish MeshConfig/pSConfig meshes, which automates tests executed by test nodes, and provides topology information to various services, such as MadDash.<br>In addition to providing a user-friendly interface for creating pSConfig/MeshConfig output to define meshes, PWA allows multiple users to collaborate on the configuration of testspecs, host groups, and configs. Users can be designated super-admins or normal users, depending on how much access they need. It is also possible to allow users to edit some meshes, but not others."
		}
	],
	"wwwUrl": "http://docs.perfsonar.net/pwa.html",
	"sourceUrl": "https://github.com/perfsonar/psconfig-web",
	"issuesUrl": "https://github.com/perfsonar/psconfig-web/issues",
	"appDeploymentSpec": {
		"supportedDeploymentEnvironments": [
			"KUBERNETES"
		],
		"kubernetesTemplate": {
			"chart": {
				"name": "nmaas-perfsonar-pwa",
				"version": "0.1.0"
			}
		},
		"defaultStorageSpace": 5,
		"exposesWebUI": true,
		"accessMethods":  [
			{
				"type": "EXTERNAL",
				"name": "PWA",
				"tag": "pwa",
				"deployParameters": {
					"INGRESS_HOSTS": "ingress.hosts",
					"INGRESS_TLS_ENABLED": "ingress.tls.enabled",
					"INGRESS_CLASS": "ingress.class",
					"INGRESS_LETSENCRYPT": "ingress.tls.acme",
					"INGRESS_WILDCARD_OR_ISSUER": "ingress.tls.certOrIssuer"
				}
			}
		]
	},
	"appConfigurationSpec": {
		"configFileRepositoryRequired": false
	},
	"state": "DISABLED",
	"configWizardTemplate": {
		"template": {
		}
	}
}