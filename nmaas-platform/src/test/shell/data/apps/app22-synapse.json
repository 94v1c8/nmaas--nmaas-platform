{
    "applicationBase": {
        "id": null,
        "name": "Synapse with Element",
        "license": "Apache License 2.0",
        "licenseUrl": "https://www.apache.org/licenses/LICENSE-2.0",
        "wwwUrl": "https://matrix.org/docs/projects/server/synapse",
        "sourceUrl": "https://github.com/matrix-org/synapse",
        "issuesUrl": "https://github.com/matrix-org/synapse/issues",
        "nmaasDocumentationUrl": "https://wiki.geant.org/display/NMAAS/NMaaS+Tools#NMaaSTools-SynapseElement",
        "descriptions": [
            {
                "language": "en",
                "briefDescription": "Secured instant messaging for teams",
                "fullDescription": "<a href=\"https://matrix.org/\">Matrix</a> is an open and secure instant messaging protocol providing rich functionality. <br><br><a href=\"https://matrix.org/docs/projects/server/synapse\">Synapse</a> is an open-source server implementing the Matrix protocol. <br><br><a href=\"https://element.io/\">Element</a> (formerly Riot) is an open-source web-client that can connect to any accessible Matrix server."
            },
            {
                "language": "de",
                "briefDescription": "Secured instant messaging for teams",
                "fullDescription": "<a href=\"https://matrix.org/\">Matrix</a> is an open and secure instant messaging protocol providing rich functionality. <br><br><a href=\"https://matrix.org/docs/projects/server/synapse\">Synapse</a> is an open-source server implementing the Matrix protocol. <br><br><a href=\"https://element.io/\">Element</a> (formerly Riot) is an open-source web-client that can connect to any accessible Matrix server."
            },
            {
                "language": "fr",
                "briefDescription": "Secured instant messaging for teams",
                "fullDescription": "<a href=\"https://matrix.org/\">Matrix</a> is an open and secure instant messaging protocol providing rich functionality. <br><br><a href=\"https://matrix.org/docs/projects/server/synapse\">Synapse</a> is an open-source server implementing the Matrix protocol. <br><br><a href=\"https://element.io/\">Element</a> (formerly Riot) is an open-source web-client that can connect to any accessible Matrix server."
            },
            {
                "language": "pl",
                "briefDescription": "Secured instant messaging for teams",
                "fullDescription": "<a href=\"https://matrix.org/\">Matrix</a> is an open and secure instant messaging protocol providing rich functionality. <br><br><a href=\"https://matrix.org/docs/projects/server/synapse\">Synapse</a> is an open-source server implementing the Matrix protocol. <br><br><a href=\"https://element.io/\">Element</a> (formerly Riot) is an open-source web-client that can connect to any accessible Matrix server."
            }
        ],
        "tags": [
            "messaging"
        ]
    },
    "application": {
        "id": null,
        "name": "Synapse with Element",
        "version": "1.22.1",
        "configWizardTemplate": {
            "template": {
                "components": [
                    {
                        "label": "Tabs",
                        "components": [
                            {
                                "label": "Base",
                                "key": "configTab",
                                "components": [
                                    {
                                        "label": "Additional Parameters",
                                        "hideLabel": true,
                                        "type": "container",
                                        "input": true,
                                        "tab": 0,
                                        "key": "additionalParameters",
                                        "components": [
                                            {
                                                "label": "Element instance name (shown on the login page)",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "riot#branding#brand",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Allocated capacity for the media volume",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "volumes#media#capacity",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "defaultValue": "10Gi",
                                                "placeholder": "Default value: 10Gi",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Allocated database storage space",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "postgresql#persistence#size",
                                                "tab": 0,
                                                "validate": {
                                                    "required": true
                                                },
                                                "defaultValue": "4Gi",
                                                "placeholder": "Default value: 4Gi",
                                                "inputFormat": "plain"
                                            }
                                        ]
                                    },
                                    {
                                        "label": "Configuration",
                                        "hideLabel": true,
                                        "tableView": true,
                                        "type": "container",
                                        "input": true,
                                        "tab": 0,
                                        "key": "configuration",
                                        "components": [
                                            {
                                                "label": "Administrator email address",
                                                "type": "email",
                                                "input": true,
                                                "key": "matrixAdminEmail",
                                                "inputFormat": "plain",
                                                "validate": {
                                                    "required": true
                                                }
                                            },
                                            {
                                                "label": "Block regular users inviting others to rooms",
                                                "type": "checkbox",
                                                "defaultValue": false,
                                                "input": true,
                                                "key": "matrixBlockNonAdminInvites",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Registrations are opened",
                                                "type": "checkbox",
                                                "defaultValue": false,
                                                "input": true,
                                                "key": "matrixRegistrationEnabled",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Guests allowed to register",
                                                "type": "checkbox",
                                                "defaultValue": false,
                                                "input": true,
                                                "key": "matrixRegistrationAllowGuests",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "User online/offline indicators enabled",
                                                "type": "checkbox",
                                                "defaultValue": false,
                                                "input": true,
                                                "key": "matrixPresence",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Expose Prometheus metrics",
                                                "type": "checkbox",
                                                "defaultValue": false,
                                                "input": true,
                                                "key": "synapseMetricsEnabled",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Outgoing emails enabled",
                                                "type": "checkbox",
                                                "defaultValue": false,
                                                "input": true,
                                                "key": "mailEnabled",
                                                "inputFormat": "plain"
                                            },
                                            {
                                                "label": "Default \"email from\" phrase",
                                                "type": "textfield",
                                                "input": true,
                                                "key": "mailFrom",
                                                "inputFormat": "plain",
                                                "defaultValue": "Matrix NMaaS <no-reply@nmaas.eu>",
                                                "placeholder": "Matrix NMaaS <no-reply@nmaas.eu>",
                                                "validate": {
                                                    "required": true
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "type": "tabs",
                        "input": false,
                        "key": "tabs"
                    },
                    {
                        "type": "button",
                        "label": "Apply configuration",
                        "disableOnInvalid": true,
                        "theme": "primary",
                        "input": false,
                        "tableView": true
                    }
                ]
            }
        },
        "configUpdateWizardTemplate": null,
        "appDeploymentSpec": {
            "supportedDeploymentEnvironments": [
                "KUBERNETES"
            ],
            "kubernetesTemplate": {
                "chart": {
                    "name": "nmaas-matrix",
                    "version": "2.8.0"
                },
                "mainDeploymentName": "synapse"
            },
            "deployParameters": {
                "RELEASE_NAME": "fullnameOverride=%VALUE%",
                "RELEASE_NAME_DB_PASS": "postgresql.password=%VALUE%"
            },
            "globalDeployParameters": {
                "manualDeployment": "false",
                "mail.relay.enabled": "false",
                "coturn.enabled": "false"
            },
            "storageVolumes": [],
            "exposesWebUI": true,
            "allowSshAccess": false,
            "accessMethods": [
                {
                    "type": "DEFAULT",
                    "name": "Synapse",
                    "tag": "synapse",
                    "deployParameters": {
                        "INGRESS_ENABLED": "ingress.enabled",
                        "INGRESS_CLASS": "ingress.annotations.\"kubernetes\\.io/ingress\\.class\"=%VALUE%",
                        "INGRESS_HOSTS": "ingress.hosts.synapse=%VALUE%",
                        "INGRESS_TLS_HOSTS": "ingress.tls[0].hosts[0]=%VALUE%"
                    }
                },
                {
                    "type": "EXTERNAL",
                    "name": "Element",
                    "tag": "element",
                    "deployParameters": {
                        "INGRESS_HOSTS": "ingress.hosts.riot=%VALUE%",
                        "INGRESS_TLS_HOSTS": "ingress.tls[0].hosts[1]=%VALUE%"
                    }
                }
            ]
        },
        "appConfigurationSpec": {
            "configFileRepositoryRequired": true,
            "configUpdateEnabled": true,
            "templates": [
                {
                    "configFileName": "homeserver.yaml",
                    "configFileDirectory": "homeserver-config-simplified",
                    "configFileTemplateContent": "## Server ##\n\n# The domain name of the server, with optional explicit port.\n# This is used by remote servers to connect to this server,\n# e.g. matrix.org, localhost:8080, etc.\n# This is also the last part of your UserID.\n#\nserver_name: ${RELEASE_NAME}.${DOMAIN_CODENAME}.${BASE_URL}\n\n# When running as a daemon, the file to store the pid in\n#\npid_file: /data/homeserver.pid\n\n# The absolute URL to the web client which /_matrix/client will redirect\n# to if 'webclient' is configured under the 'listeners' configuration.\n#\n# This option can be also set to the filesystem path to the web client\n# which will be served at /_matrix/client/ if 'webclient' is configured\n# under the 'listeners' configuration, however this is a security risk:\n# https://github.com/matrix-org/synapse#security-note\n#\n#web_client_location: https://riot.example.com/\n\n# The public-facing base URL that clients use to access this HS\n# (not including _matrix/...). This is the same URL a user would\n# enter into the 'custom HS URL' field on their client. If you\n# use synapse with a reverse proxy, this should be the URL to reach\n# synapse via the proxy.\n#\npublic_baseurl: \"https://${RELEASE_NAME}.${DOMAIN_CODENAME}.${BASE_URL}\"\n# Set the soft limit on the number of file descriptors synapse can use\n# Zero is used to indicate synapse should set the soft limit to the\n# hard limit.\n#\n#soft_file_limit: 0\n\n# Set to false to disable presence tracking on this homeserver (online/offline indicators)\n#\nuse_presence: ${matrixPresence?c}\n\n# Whether to require authentication to retrieve profile data (avatars,\n# display names) of other users through the client API. Defaults to\n# 'false'. Note that profile data is also available via the federation\n# API, so this setting is of limited value if federation is enabled on\n# the server.\n#\n#require_auth_for_profile_requests: true\n\n# Uncomment to require a user to share a room with another user in order\n# to retrieve their profile information. Only checked on Client-Server\n# requests. Profile requests from other servers should be checked by the\n# requesting server. Defaults to 'false'.\n#\n#limit_profile_requests_to_users_who_share_rooms: true\n\n# If set to 'true', removes the need for authentication to access the server's\n# public rooms directory through the client API, meaning that anyone can\n# query the room directory. Defaults to 'false'.\n#\n#allow_public_rooms_without_auth: true\n\n# If set to 'true', allows any other homeserver to fetch the server's public\n# rooms directory via federation. Defaults to 'false'.\n#\nallow_public_rooms_over_federation: false\n\n# The default room version for newly created rooms.\n#\n# Known room versions are listed here:\n# https://matrix.org/docs/spec/#complete-list-of-room-versions\n#\n# For example, for room version 1, default_room_version should be set\n# to \"1\".\n#\n#default_room_version: \"5\"\n\n# The GC threshold parameters to pass to `gc.set_threshold`, if defined\n#\n#gc_thresholds: [700, 10, 10]\n\n# Set the limit on the returned events in the timeline in the get\n# and sync operations. The default value is -1, means no upper limit.\n#\n#filter_timeline_limit: 5000\n\n# Whether room invites to users on this server should be blocked\n# (except those sent by local server admins). The default is False.\n#\nblock_non_admin_invites: ${matrixBlockNonAdminInvites?c}\n\n# Room searching\n#\n# If disabled, new messages will not be indexed for searching and users\n# will receive errors when searching for messages. Defaults to enabled.\n#\nenable_search: true\n\n# Restrict federation to the following whitelist of domains.\n# N.B. we recommend also firewalling your federation listener to limit\n# inbound federation traffic as early as possible, rather than relying\n# purely on this application-layer restriction.  If not specified, the\n# default is to whitelist everything.\n\n# Prevent federation requests from being sent to the following\n# blacklist IP address CIDR ranges. If this option is not specified, or\n# specified with an empty list, no ip range blacklist will be enforced.\n#\n# As of Synapse v1.4.0 this option also affects any outbound requests to identity\n# servers provided by user input.\n#\n# (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly\n# listed here, since they correspond to unroutable addresses.)\n\nfederation_ip_range_blacklist:\n  - '127.0.0.0/8'\n  - '10.0.0.0/8'\n  - '172.16.0.0/12'\n  - '192.168.0.0/16'\n  - '100.64.0.0/10'\n  - '169.254.0.0/16'\n  - '::1/128'\n  - 'fe80::/64'\n  - 'fc00::/7'\n\n# List of ports that Synapse should listen on, their purpose and their\n# configuration.\n#\n# Options for each listener include:\n#\n#   port: the TCP port to bind to\n#\n#   bind_addresses: a list of local addresses to listen on. The default is\n#       'all local interfaces'.\n#\n#   type: the type of listener. Normally 'http', but other valid options are:\n#       'manhole' (see docs/manhole.md),\n#       'metrics' (see docs/metrics-howto.md),\n#       'replication' (see docs/workers.md).\n#\n#   tls: set to true to enable TLS for this listener. Will use the TLS\n#       key/cert specified in tls_private_key_path / tls_certificate_path.\n#\n#   x_forwarded: Only valid for an 'http' listener. Set to true to use the\n#       X-Forwarded-For header as the client IP. Useful when Synapse is\n#       behind a reverse-proxy.\n#\n#   resources: Only valid for an 'http' listener. A list of resources to host\n#       on this port. Options for each resource are:\n#\n#       names: a list of names of HTTP resources. See below for a list of\n#           valid resource names.\n#\n#       compress: set to true to enable HTTP comression for this resource.\n#\n#   additional_resources: Only valid for an 'http' listener. A map of\n#        additional endpoints which should be loaded via dynamic modules.\n#\n# Valid resource names are:\n#\n#   client: the client-server API (/_matrix/client), and the synapse admin\n#       API (/_synapse/admin). Also implies 'media' and 'static'.\n#\n#   consent: user consent forms (/_matrix/consent). See\n#       docs/consent_tracking.md.\n#\n#   federation: the server-server API (/_matrix/federation). Also implies\n#       'media', 'keys', 'openid'\n#\n#   keys: the key discovery API (/_matrix/keys).\n#\n#   media: the media API (/_matrix/media).\n#\n#   metrics: the metrics interface. See docs/metrics-howto.md.\n#\n#   openid: OpenID authentication.\n#\n#   replication: the HTTP replication API (/_synapse/replication). See\n#       docs/workers.md.\n#\n#   static: static resources under synapse/static (/_matrix/static). (Mostly\n#       useful for 'fallback authentication'.)\n#\n#   webclient: A web client. Requires web_client_location to be set.\n#\nlisteners:\n  # TLS-enabled listener: for when matrix traffic is sent directly to synapse.\n  #\n  # Disabled by default. To enable it, uncomment the following. (Note that you\n  # will also need to give Synapse a TLS key and certificate: see the TLS section\n  # below.)\n  #\n  #- port: 8448\n  #  type: http\n  #  tls: true\n  #  resources:\n  #    - names: [client, federation]\n\n  # Unsecure HTTP listener: for when matrix traffic passes through a reverse proxy\n  # that unwraps TLS.\n  #\n  # If you plan to use a reverse proxy, please see\n  # https://github.com/matrix-org/synapse/blob/master/docs/reverse_proxy.md.\n  #\n  - port: 8008\n    tls: false\n    type: http\n    x_forwarded: true\n    bind_addresses: ['0.0.0.0']\n\n    resources:\n      - names: [client, federation]\n        compress: false\n\n    # example additional_resources:\n    #\n    #additional_resources:\n    #  \"/_matrix/my/custom/endpoint\":\n    #    module: my_module.CustomRequestHandler\n    #    config: {}\n\n  - type: metrics\n    port: 9092\n    bind_addresses: ['0.0.0.0']\n\n    resources:\n      - names: [metrics]\n  # Turn on the twisted ssh manhole service on localhost on the given\n  # port.\n  #\n  #- port: 9000\n  #  bind_addresses: ['::1', '127.0.0.1']\n  #  type: manhole\n\n# Forward extremities can build up in a room due to networking delays between\n# homeservers. Once this happens in a large room, calculation of the state of\n# that room can become quite expensive. To mitigate this, once the number of\n# forward extremities reaches a given threshold, Synapse will send an\n# org.matrix.dummy_event event, which will reduce the forward extremities\n# in the room.\n#\n# This setting defines the threshold (i.e. number of forward extremities in the\n# room) at which dummy events are sent. The default value is 10.\n#\n#dummy_events_threshold: 5\n\n\n## Homeserver blocking ##\n\n# How to reach the server admin, used in ResourceLimitError\n#\nadmin_contact: 'mailto:${matrixAdminEmail}'\n\n# Global blocking\n#\nhs_disabled: false\nhs_disabled_message: \"\"\n\n# Monthly Active User Blocking\n#\n# Used in cases where the admin or server owner wants to limit to the\n# number of monthly active users.\n#\n# 'limit_usage_by_mau' disables/enables monthly active user blocking. When\n# enabled and a limit is reached the server returns a 'ResourceLimitError'\n# with error type Codes.RESOURCE_LIMIT_EXCEEDED\n#\n# 'max_mau_value' is the hard limit of monthly active users above which\n# the server will start blocking user actions.\n#\n# 'mau_trial_days' is a means to add a grace period for active users. It\n# means that users must be active for this number of days before they\n# can be considered active and guards against the case where lots of users\n# sign up in a short space of time never to return after their initial\n# session.\n#\n# 'mau_limit_alerting' is a means of limiting client side alerting\n# should the mau limit be reached. This is useful for small instances\n# where the admin has 5 mau seats (say) for 5 specific people and no\n# interest increasing the mau limit further. Defaults to True, which\n# means that alerting is enabled\n#\n#limit_usage_by_mau: false\n#max_mau_value: 50\n#mau_trial_days: 2\n#mau_limit_alerting: false\n\n# If enabled, the metrics for the number of monthly active users will\n# be populated, however no one will be limited. If limit_usage_by_mau\n# is true, this is implied to be true.\n#\n#mau_stats_only: false\n\n# Sometimes the server admin will want to ensure certain accounts are\n# never blocked by mau checking. These accounts are specified here.\n#\n#mau_limit_reserved_threepids:\n#  - medium: 'email'\n#    address: 'reserved_user@example.com'\n\n# Used by phonehome stats to group together related servers.\n#server_context: context\n\n# Resource-constrained homeserver settings\n#\n# When this is enabled, the room \"complexity\" will be checked before a user\n# joins a new remote room. If it is above the complexity limit, the server will\n# disallow joining, or will instantly leave.\n#\n# Room complexity is an arbitrary measure based on factors such as the number of\n# users in the room.\n#\nlimit_remote_rooms:\n  # Uncomment to enable room complexity checking.\n  #\n  #enabled: true\n\n  # the limit above which rooms cannot be joined. The default is 1.0.\n  #\n  #complexity: 0.5\n\n  # override the error which is returned when the room is too complex.\n  #\n  #complexity_error: \"This room is too complex.\"\n\n# Whether to require a user to be in the room to add an alias to it.\n# Defaults to 'true'.\n#\n#require_membership_for_aliases: false\n\n# Whether to allow per-room membership profiles through the send of membership\n# events with profile information that differ from the target's global profile.\n# Defaults to 'true'.\n#\n#allow_per_room_profiles: false\n\n# How long to keep redacted events in unredacted form in the database. After\n# this period redacted events get replaced with their redacted form in the DB.\n#\n# Defaults to `7d`. Set to `null` to disable.\n#\nredaction_retention_period: 7d\n\n# How long to track users' last seen time and IPs in the database.\n#\n# Defaults to `28d`. Set to `null` to disable clearing out of old rows.\n#\n#user_ips_max_age: 14d\n\n# Message retention policy at the server level.\n#\n# Room admins and mods can define a retention period for their rooms using the\n# 'm.room.retention' state event, and server admins can cap this period by setting\n# the 'allowed_lifetime_min' and 'allowed_lifetime_max' config options.\n#\n# If this feature is enabled, Synapse will regularly look for and purge events\n# which are older than the room's maximum retention period. Synapse will also\n# filter events received over federation so that events that should have been\n# purged are ignored and not stored again.\n#\nretention:\n  # The message retention policies feature is disabled by default. Uncomment the\n  # following line to enable it.\n  #\n  #enabled: true\n\n  # Default retention policy. If set, Synapse will apply it to rooms that lack the\n  # 'm.room.retention' state event. Currently, the value of 'min_lifetime' doesn't\n  # matter much because Synapse doesn't take it into account yet.\n  #\n  #default_policy:\n  #  min_lifetime: 1d\n  #  max_lifetime: 1y\n\n  # Retention policy limits. If set, a user won't be able to send a\n  # 'm.room.retention' event which features a 'min_lifetime' or a 'max_lifetime'\n  # that's not within this range. This is especially useful in closed federations,\n  # in which server admins can make sure every federating server applies the same\n  # rules.\n  #\n  #allowed_lifetime_min: 1d\n  #allowed_lifetime_max: 1y\n\n  # Server admins can define the settings of the background jobs purging the\n  # events which lifetime has expired under the 'purge_jobs' section.\n  #\n  # If no configuration is provided, a single job will be set up to delete expired\n  # events in every room daily.\n  #\n  # Each job's configuration defines which range of message lifetimes the job\n  # takes care of. For example, if 'shortest_max_lifetime' is '2d' and\n  # 'longest_max_lifetime' is '3d', the job will handle purging expired events in\n  # rooms whose state defines a 'max_lifetime' that's both higher than 2 days, and\n  # lower than or equal to 3 days. Both the minimum and the maximum value of a\n  # range are optional, e.g. a job with no 'shortest_max_lifetime' and a\n  # 'longest_max_lifetime' of '3d' will handle every room with a retention policy\n  # which 'max_lifetime' is lower than or equal to three days.\n  #\n  # The rationale for this per-job configuration is that some rooms might have a\n  # retention policy with a low 'max_lifetime', where history needs to be purged\n  # of outdated messages on a more frequent basis than for the rest of the rooms\n  # (e.g. every 12h), but not want that purge to be performed by a job that's\n  # iterating over every room it knows, which could be heavy on the server.\n  #\n  #purge_jobs:\n  #  - shortest_max_lifetime: 1d\n  #    longest_max_lifetime: 3d\n  #    interval: 12h\n  #  - shortest_max_lifetime: 3d\n  #    longest_max_lifetime: 1y\n  #    interval: 1d\n\n# Inhibits the /requestToken endpoints from returning an error that might leak\n# information about whether an e-mail address is in use or not on this\n# homeserver.\n# Note that for some endpoints the error situation is the e-mail already being\n# used, and for others the error is entering the e-mail being unused.\n# If this option is enabled, instead of returning an error, these endpoints will\n# act as if no error happened and return a fake session ID ('sid') to clients.\n#\n#request_token_inhibit_3pid_errors: true\n\n\n## TLS ##\n\n# PEM-encoded X509 certificate for TLS.\n# This certificate, as of Synapse 1.0, will need to be a valid and verifiable\n# certificate, signed by a recognised Certificate Authority.\n#\n# See 'ACME support' below to enable auto-provisioning this certificate via\n# Let's Encrypt.\n#\n# If supplying your own, be sure to use a `.pem` file that includes the\n# full certificate chain including any intermediate certificates (for\n# instance, if using certbot, use `fullchain.pem` as your certificate,\n# not `cert.pem`).\n#\n#tls_certificate_path: \"CONFDIR/SERVERNAME.tls.crt\"\n\n# PEM-encoded private key for TLS\n#\n#tls_private_key_path: \"CONFDIR/SERVERNAME.tls.key\"\n\n# Whether to verify TLS server certificates for outbound federation requests.\n#\n# Defaults to `true`. To disable certificate verification, uncomment the\n# following line.\n#\n#federation_verify_certificates: false\n\n# The minimum TLS version that will be used for outbound federation requests.\n#\n# Defaults to `1`. Configurable to `1`, `1.1`, `1.2`, or `1.3`. Note\n# that setting this value higher than `1.2` will prevent federation to most\n# of the public Matrix network: only configure it to `1.3` if you have an\n# entirely private federation setup and you can ensure TLS 1.3 support.\n#\n#federation_client_minimum_tls_version: 1.2\n\n# Skip federation certificate verification on the following whitelist\n# of domains.\n#\n# This setting should only be used in very specific cases, such as\n# federation over Tor hidden services and similar. For private networks\n# of homeservers, you likely want to use a private CA instead.\n#\n# Only effective if federation_verify_certicates is `true`.\n#\n#federation_certificate_verification_whitelist:\n#  - lon.example.com\n#  - *.domain.com\n#  - *.onion\n\n# List of custom certificate authorities for federation traffic.\n#\n# This setting should only normally be used within a private network of\n# homeservers.\n#\n# Note that this list will replace those that are provided by your\n# operating environment. Certificates must be in PEM format.\n#\n#federation_custom_ca_list:\n#  - myCA1.pem\n#  - myCA2.pem\n#  - myCA3.pem\n\n# ACME support: This will configure Synapse to request a valid TLS certificate\n# for your configured `server_name` via Let's Encrypt.\n#\n# Note that ACME v1 is now deprecated, and Synapse currently doesn't support\n# ACME v2. This means that this feature currently won't work with installs set\n# up after November 2019. For more info, and alternative solutions, see\n# https://github.com/matrix-org/synapse/blob/master/docs/ACME.md#deprecation-of-acme-v1\n#\n# Note that provisioning a certificate in this way requires port 80 to be\n# routed to Synapse so that it can complete the http-01 ACME challenge.\n# By default, if you enable ACME support, Synapse will attempt to listen on\n# port 80 for incoming http-01 challenges - however, this will likely fail\n# with 'Permission denied' or a similar error.\n#\n# There are a couple of potential solutions to this:\n#\n#  * If you already have an Apache, Nginx, or similar listening on port 80,\n#    you can configure Synapse to use an alternate port, and have your web\n#    server forward the requests. For example, assuming you set 'port: 8009'\n#    below, on Apache, you would write:\n#\n#    ProxyPass /.well-known/acme-challenge http://localhost:8009/.well-known/acme-challenge\n#\n#  * Alternatively, you can use something like `authbind` to give Synapse\n#    permission to listen on port 80.\n#\nacme:\n    # ACME support is disabled by default. Set this to `true` and uncomment\n    # tls_certificate_path and tls_private_key_path above to enable it.\n    #\n    enabled: false\n\n    # Endpoint to use to request certificates. If you only want to test,\n    # use Let's Encrypt's staging url:\n    #     https://acme-staging.api.letsencrypt.org/directory\n    #\n    #url: https://acme-v01.api.letsencrypt.org/directory\n\n    # Port number to listen on for the HTTP-01 challenge. Change this if\n    # you are forwarding connections through Apache/Nginx/etc.\n    #\n    port: 80\n\n    # Local addresses to listen on for incoming connections.\n    # Again, you may want to change this if you are forwarding connections\n    # through Apache/Nginx/etc.\n    #\n    bind_addresses: ['::', '0.0.0.0']\n\n    # How many days remaining on a certificate before it is renewed.\n    #\n    reprovision_threshold: 30\n\n    # The domain that the certificate should be for. Normally this\n    # should be the same as your Matrix domain (i.e., 'server_name'), but,\n    # by putting a file at 'https://<server_name>/.well-known/matrix/server',\n    # you can delegate incoming traffic to another server. If you do that,\n    # you should give the target of the delegation here.\n    #\n    # For example: if your 'server_name' is 'example.com', but\n    # 'https://example.com/.well-known/matrix/server' delegates to\n    # 'matrix.example.com', you should put 'matrix.example.com' here.\n    #\n    # If not set, defaults to your 'server_name'.\n    #\n    domain: matrix.example.com\n\n    # file to use for the account key. This will be generated if it doesn't\n    # exist.\n    #\n    # If unspecified, we will use CONFDIR/client.key.\n    #\n    account_key_file: DATADIR/acme_account.key\n\n# List of allowed TLS fingerprints for this server to publish along\n# with the signing keys for this server. Other matrix servers that\n# make HTTPS requests to this server will check that the TLS\n# certificates returned by this server match one of the fingerprints.\n#\n# Synapse automatically adds the fingerprint of its own certificate\n# to the list. So if federation traffic is handled directly by synapse\n# then no modification to the list is required.\n#\n# If synapse is run behind a load balancer that handles the TLS then it\n# will be necessary to add the fingerprints of the certificates used by\n# the loadbalancers to this list if they are different to the one\n# synapse is using.\n#\n# Homeservers are permitted to cache the list of TLS fingerprints\n# returned in the key responses up to the \"valid_until_ts\" returned in\n# key. It may be necessary to publish the fingerprints of a new\n# certificate and wait until the \"valid_until_ts\" of the previous key\n# responses have passed before deploying it.\n#\n# You can calculate a fingerprint from a given TLS listener via:\n# openssl s_client -connect $host:$port < /dev/null 2> /dev/null |\n#   openssl x509 -outform DER | openssl sha256 -binary | base64 | tr -d '='\n# or by checking matrix.org/federationtester/api/report?server_name=$host\n#\n#tls_fingerprints: [{\"sha256\": \"<base64_encoded_sha256_fingerprint>\"}]\n\n## Database ##\n\ndatabase:\n    # The database engine name\n    name: \"psycopg2\"\n    # Arguments to pass to the engine\n    args:\n        user: \"matrix\"\n        password: \"${RELEASE_NAME}\"\n        database: \"matrix\"\n        \n        host: \"${RELEASE_NAME}-postgresql\"\n        port: \"5432\"\n        sslmode: prefer\n        cp_min: 5\n        cp_max: 10\n\n# Number of events to cache in memory.\n#\n#event_cache_size: 10K\n\n\n## Logging ##\n\n# A yaml python logging config file as described by\n# https://docs.python.org/3.7/library/logging.config.html#configuration-dictionary-schema\n#\nlog_config: \"/data/${RELEASE_NAME}.${DOMAIN_CODENAME}.${BASE_URL}.log.config\"\n\n\n## Ratelimiting ##\n\n# Ratelimiting settings for client actions (registration, login, messaging).\n#\n# Each ratelimiting configuration is made of two parameters:\n#   - per_second: number of requests a client can send per second.\n#   - burst_count: number of requests a client can send before being throttled.\n#\n# Synapse currently uses the following configurations:\n#   - one for messages that ratelimits sending based on the account the client\n#     is using\n#   - one for registration that ratelimits registration requests based on the\n#     client's IP address.\n#   - one for login that ratelimits login requests based on the client's IP\n#     address.\n#   - one for login that ratelimits login requests based on the account the\n#     client is attempting to log into.\n#   - one for login that ratelimits login requests based on the account the\n#     client is attempting to log into, based on the amount of failed login\n#     attempts for this account.\n#   - one for ratelimiting redactions by room admins. If this is not explicitly\n#     set then it uses the same ratelimiting as per rc_message. This is useful\n#     to allow room admins to deal with abuse quickly.\n#\n# The defaults are as shown below.\n#\n#rc_message:\n#  per_second: 0.2\n#  burst_count: 10\n#\n#rc_registration:\n#  per_second: 0.17\n#  burst_count: 3\n#\n#rc_login:\n#  address:\n#    per_second: 0.17\n#    burst_count: 3\n#  account:\n#    per_second: 0.17\n#    burst_count: 3\n#  failed_attempts:\n#    per_second: 0.17\n#    burst_count: 3\n#\n#rc_admin_redaction:\n#  per_second: 1\n#  burst_count: 50\n\n\n# Ratelimiting settings for incoming federation\n#\n# The rc_federation configuration is made up of the following settings:\n#   - window_size: window size in milliseconds\n#   - sleep_limit: number of federation requests from a single server in\n#     a window before the server will delay processing the request.\n#   - sleep_delay: duration in milliseconds to delay processing events\n#     from remote servers by if they go over the sleep limit.\n#   - reject_limit: maximum number of concurrent federation requests\n#     allowed from a single server\n#   - concurrent: number of federation requests to concurrently process\n#     from a single server\n#\n# The defaults are as shown below.\n#\n#rc_federation:\n#  window_size: 1000\n#  sleep_limit: 10\n#  sleep_delay: 500\n#  reject_limit: 50\n#  concurrent: 3\n\n# Target outgoing federation transaction frequency for sending read-receipts,\n# per-room.\n#\n# If we end up trying to send out more read-receipts, they will get buffered up\n# into fewer transactions.\n#\n#federation_rr_transactions_per_room_per_second: 50\n\n\n\n## Media Store ##\n\n# Enable the media store service in the Synapse master. Uncomment the\n# following if you are using a separate media store worker.\n#\n#enable_media_repo: false\n\n# Directory where uploaded images and attachments are stored.\n#\nmedia_store_path: \"/data/media_store\"\n\n# Media storage providers allow media to be stored in different\n# locations.\n#\n#media_storage_providers:\n#  - module: file_system\n#    # Whether to write new local files.\n#    store_local: false\n#    # Whether to write new remote media\n#    store_remote: false\n#    # Whether to block upload requests waiting for write to this\n#    # provider to complete\n#    store_synchronous: false\n#    config:\n#       directory: /mnt/some/other/directory\n\n# Directory where in-progress uploads are stored.\n#\nuploads_path: \"/data/uploads\"\n\n# The largest allowed upload size in bytes\n\nmax_upload_size: 10M\n\n# Maximum number of pixels that will be thumbnailed\n\nmax_image_pixels: 32M\n\n# Whether to generate new thumbnails on the fly to precisely match\n# the resolution requested by the client. If true then whenever\n# a new resolution is requested by the client the server will\n# generate a new thumbnail. If false the server will pick a thumbnail\n# from a precalculated list.\n#\n#dynamic_thumbnails: false\n\n# List of thumbnails to precalculate when an image is uploaded.\n#\n#thumbnail_sizes:\n#  - width: 32\n#    height: 32\n#    method: crop\n#  - width: 96\n#    height: 96\n#    method: crop\n#  - width: 320\n#    height: 240\n#    method: scale\n#  - width: 640\n#    height: 480\n#    method: scale\n#  - width: 800\n#    height: 600\n#    method: scale\n\n# Is the preview URL API enabled?\n#\n# 'false' by default: uncomment the following to enable it (and specify a\n# url_preview_ip_range_blacklist blacklist).\n#\nurl_preview_enabled: false\n\n# The largest allowed URL preview spidering size in bytes\n\nmax_spider_size: 1M\n\n## Captcha ##\n# See docs/CAPTCHA_SETUP for full details of configuring this.\n\n# This homeserver's ReCAPTCHA public key.\n#\n#recaptcha_public_key: \"YOUR_PUBLIC_KEY\"\n\n# This homeserver's ReCAPTCHA private key.\n#\n#recaptcha_private_key: \"YOUR_PRIVATE_KEY\"\n\n# Enables ReCaptcha checks when registering, preventing signup\n# unless a captcha is answered. Requires a valid ReCaptcha\n# public/private key.\n#\n#enable_registration_captcha: false\n\n# A secret key used to bypass the captcha test entirely.\n#\n#captcha_bypass_secret: \"YOUR_SECRET_HERE\"\n\n# The API endpoint to use for verifying m.login.recaptcha responses.\n#\n#recaptcha_siteverify_api: \"https://www.recaptcha.net/recaptcha/api/siteverify\"\n  \n## Registration ##\n#\n# Registration can be rate-limited using the parameters in the \"Ratelimiting\"\n# section of this file.\n\n# Enable registration for new users.\n#\nenable_registration: ${matrixRegistrationEnabled?c}\n\n# Optional account validity configuration. This allows for accounts to be denied\n# any request after a given period.\n#\n# ``enabled`` defines whether the account validity feature is enabled. Defaults\n# to False.\n#\n# ``period`` allows setting the period after which an account is valid\n# after its registration. When renewing the account, its validity period\n# will be extended by this amount of time. This parameter is required when using\n# the account validity feature.\n#\n# ``renew_at`` is the amount of time before an account's expiry date at which\n# Synapse will send an email to the account's email address with a renewal link.\n# This needs the ``email`` and ``public_baseurl`` configuration sections to be\n# filled.\n#\n# ``renew_email_subject`` is the subject of the email sent out with the renewal\n# link. ``%(app)s`` can be used as a placeholder for the ``app_name`` parameter\n# from the ``email`` section.\n#\n# Once this feature is enabled, Synapse will look for registered users without an\n# expiration date at startup and will add one to every account it found using the\n# current settings at that time.\n# This means that, if a validity period is set, and Synapse is restarted (it will\n# then derive an expiration date from the current validity period), and some time\n# after that the validity period changes and Synapse is restarted, the users'\n# expiration dates won't be updated unless their account is manually renewed. This\n# date will be randomly selected within a range [now + period - d ; now + period],\n# where d is equal to 10% of the validity period.\n#\n#account_validity:\n#  enabled: true\n#  period: 6w\n#  renew_at: 1w\n#  renew_email_subject: \"Renew your %(app)s account\"\n#  # Directory in which Synapse will try to find the HTML files to serve to the\n#  # user when trying to renew an account. Optional, defaults to\n#  # synapse/res/templates.\n#  template_dir: \"res/templates\"\n#  # HTML to be displayed to the user after they successfully renewed their\n#  # account. Optional.\n#  account_renewed_html_path: \"account_renewed.html\"\n#  # HTML to be displayed when the user tries to renew an account with an invalid\n#  # renewal token. Optional.\n#  invalid_token_html_path: \"invalid_token.html\"\n\n# Time that a user's session remains valid for, after they log in.\n#\n# Note that this is not currently compatible with guest logins.\n#\n# Note also that this is calculated at login time: changes are not applied\n# retrospectively to users who have already logged in.\n#\n# By default, this is infinite.\n#\n#session_lifetime: 24h\n\n# Explicitly disable asking for MSISDNs from the registration\n# flow (overrides registrations_require_3pid if MSISDNs are set as required)\n#\n#disable_msisdn_registration: true\n\n# Mandate that users are only allowed to associate certain formats of\n# 3PIDs with accounts on this server.\n#\n#allowed_local_3pids:\n#  - medium: email\n#    pattern: '.*@matrix\\.org'\n#  - medium: email\n#    pattern: '.*@vector\\.im'\n#  - medium: msisdn\n#    pattern: '\\+44'\n\n# Enable 3PIDs lookup requests to identity servers from this server.\n#\n#enable_3pid_lookup: true\n\n\n# Set the number of bcrypt rounds used to generate password hash.\n# Larger numbers increase the work factor needed to generate the hash.\n# The default number is 12 (which equates to 2^12 rounds).\n# N.B. that increasing this will exponentially increase the time required\n# to register or login - e.g. 24 => 2^24 rounds which will take >20 mins.\n#\n#bcrypt_rounds: 12\n\n# Allows users to register as guests without a password/email/etc, and\n# participate in rooms hosted on this server which have been made\n# accessible to anonymous users.\n\nallow_guest_access: ${matrixRegistrationAllowGuests?c}\n\n# The identity server which we suggest that clients should use when users log\n# in on this server.\n#\n# (By default, no suggestion is made, so it is left up to the client.\n# This setting is ignored unless public_baseurl is also set.)\n#\n#default_identity_server: https://matrix.org\n\n# The list of identity servers trusted to verify third party\n# identifiers by this server.\n#\n# Also defines the ID server which will be called when an account is\n# deactivated (one will be picked arbitrarily).\n#\n# Note: This option is deprecated. Since v0.99.4, Synapse has tracked which identity\n# server a 3PID has been bound to. For 3PIDs bound before then, Synapse runs a\n# background migration script, informing itself that the identity server all of its\n# 3PIDs have been bound to is likely one of the below.\n#\n# As of Synapse v1.4.0, all other functionality of this option has been deprecated, and\n# it is now solely used for the purposes of the background migration script, and can be\n# removed once it has run.\n#trusted_third_party_id_servers:\n#  - matrix.org\n#  - vector.im\n\n# Handle threepid (email/phone etc) registration and password resets through a set of\n# *trusted* identity servers. Note that this allows the configured identity server to\n# reset passwords for accounts!\n#\n# Be aware that if `email` is not set, and SMTP options have not been\n# configured in the email config block, registration and user password resets via\n# email will be globally disabled.\n#\n# Additionally, if `msisdn` is not set, registration and password resets via msisdn\n# will be disabled regardless. This is due to Synapse currently not supporting any\n# method of sending SMS messages on its own.\n#\n# To enable using an identity server for operations regarding a particular third-party\n# identifier type, set the value to the URL of that identity server as shown in the\n# examples below.\n#\n# Servers handling the these requests must answer the `/requestToken` endpoints defined\n# by the Matrix Identity Service API specification:\n# https://matrix.org/docs/spec/identity_service/latest\n#\n# If a delegate is specified, the config option public_baseurl must also be filled out.\n#\naccount_threepid_delegates:\n#email: https://example.com     # Delegate email sending to example.com\n#msisdn: http://localhost:8090  # Delegate SMS sending to this local process\n\n# Whether users are allowed to change their displayname after it has\n# been initially set. Useful when provisioning users based on the\n# contents of a third-party directory.\n#\n# Does not apply to server administrators. Defaults to 'true'\n#\n#enable_set_displayname: false\n\n# Whether users are allowed to change their avatar after it has been\n# initially set. Useful when provisioning users based on the contents\n# of a third-party directory.\n#\n# Does not apply to server administrators. Defaults to 'true'\n#\n#enable_set_avatar_url: false\n\n# Whether users can change the 3PIDs associated with their accounts\n# (email address and msisdn).\n#\n# Defaults to 'true'\n#\n#enable_3pid_changes: false\n\n# Users who register on this homeserver will automatically be joined\n# to these rooms\n\nauto_join_rooms: []\n\n# Where auto_join_rooms are specified, setting this flag ensures that the\n# the rooms exist by creating them when the first user on the\n# homeserver registers.\n#\n# By default the auto-created rooms are publicly joinable from any federated\n# server. Use the autocreate_auto_join_rooms_federated and\n# autocreate_auto_join_room_preset settings below to customise this behaviour.\n#\n# Setting to false means that if the rooms are not manually created,\n# users cannot be auto-joined since they do not exist.\n#\n# Defaults to true. Uncomment the following line to disable automatically\n# creating auto-join rooms.\n#\n#autocreate_auto_join_rooms: false\n\n# Whether the auto_join_rooms that are auto-created are available via\n# federation. Only has an effect if autocreate_auto_join_rooms is true.\n#\n# Note that whether a room is federated cannot be modified after\n# creation.\n#\n# Defaults to true: the room will be joinable from other servers.\n# Uncomment the following to prevent users from other homeservers from\n# joining these rooms.\n#\n#autocreate_auto_join_rooms_federated: false\n\n# The room preset to use when auto-creating one of auto_join_rooms. Only has an\n# effect if autocreate_auto_join_rooms is true.\n#\n# This can be one of \"public_chat\", \"private_chat\", or \"trusted_private_chat\".\n# If a value of \"private_chat\" or \"trusted_private_chat\" is used then\n# auto_join_mxid_localpart must also be configured.\n#\n# Defaults to \"public_chat\", meaning that the room is joinable by anyone, including\n# federated servers if autocreate_auto_join_rooms_federated is true (the default).\n# Uncomment the following to require an invitation to join these rooms.\n#\n#autocreate_auto_join_room_preset: private_chat\n\n# The local part of the user id which is used to create auto_join_rooms if\n# autocreate_auto_join_rooms is true. If this is not provided then the\n# initial user account that registers will be used to create the rooms.\n#\n# The user id is also used to invite new users to any auto-join rooms which\n# are set to invite-only.\n#\n# It *must* be configured if autocreate_auto_join_room_preset is set to\n# \"private_chat\" or \"trusted_private_chat\".\n#\n# Note that this must be specified in order for new users to be correctly\n# invited to any auto-join rooms which have been set to invite-only (either\n# at the time of creation or subsequently).\n#\n# Note that, if the room already exists, this user must be joined and\n# have the appropriate permissions to invite new members.\n#\n#auto_join_mxid_localpart: system\n\n# When auto_join_rooms is specified, setting this flag to false prevents\n# guest accounts from being automatically joined to the rooms.\n#\n# Defaults to true.\n#\n#auto_join_rooms_for_guests: false\n\n\n## Metrics ###\n\n# Enable collection and rendering of performance metrics\n#\n\nenable_metrics: ${synapseMetricsEnabled?c}\n\n# Enable sentry integration\n# NOTE: While attempts are made to ensure that the logs don't contain\n# any sensitive information, this cannot be guaranteed. By enabling\n# this option the sentry server may therefore receive sensitive\n# information, and it in turn may then diseminate sensitive information\n# through insecure notification channels if so configured.\n#\n#sentry:\n#    dsn: \"...\"\n\n# Flags to enable Prometheus metrics which are not suitable to be\n# enabled by default, either for performance reasons or limited use.\n#\nmetrics_flags:\n    # Publish synapse_federation_known_servers, a gauge of the number of\n    # servers this homeserver knows about, including itself. May cause\n    # performance problems on large homeservers.\n    #\n    #known_servers: true\n\n# Whether or not to report anonymized homeserver usage statistics.\nreport_stats: false\n\n# The endpoint to report the anonymized homeserver usage statistics to.\n# Defaults to https://matrix.org/report-usage-stats/push\n#\n#report_stats_endpoint: https://example.com/report-usage-stats/push\n\n\n## API Configuration ##\n\n# A list of event types that will be included in the room_invite_state\n#\n#room_invite_state_types:\n#  - \"m.room.join_rules\"\n#  - \"m.room.canonical_alias\"\n#  - \"m.room.avatar\"\n#  - \"m.room.encryption\"\n#  - \"m.room.name\"\n\n\n# A list of application service config files to use\n#\napp_service_config_files: []\n\n# Uncomment to enable tracking of application service IP addresses. Implicitly\n# enables MAU tracking for application service users.\n#\n#track_appservice_user_ips: true  \n\n# a secret which is used to calculate HMACs for form values, to stop\n# falsification of values. Must be specified for the User Consent\n# forms to work.\n#\n# form_secret: <PRIVATE STRING>\n\n## Signing Keys ##\n\n# Path to the signing key to sign messages with\n#\nsigning_key_path: \"/data/keys/${RELEASE_NAME}.${DOMAIN_CODENAME}.${BASE_URL}.signing.key\"\n\n# The keys that the server used to sign messages with but won't use\n# to sign new messages. E.g. it has lost its private key\n#\n#old_signing_keys:\n#  \"ed25519:auto\":\n#    # Base64 encoded public key\n#    key: \"The public part of your old signing key.\"\n#    # Millisecond POSIX timestamp when the key expired.\n#    expired_ts: 123456789123\n\n# How long key response published by this server is valid for.\n# Used to set the valid_until_ts in /key/v2 APIs.\n# Determines how quickly servers will query to check which keys\n# are still valid.\n#\n#key_refresh_interval: 1d\n\n# The trusted servers to download signing keys from.\n#\n# When we need to fetch a signing key, each server is tried in parallel.\n#\n# Normally, the connection to the key server is validated via TLS certificates.\n# Additional security can be provided by configuring a `verify key`, which\n# will make synapse check that the response is signed by that key.\n#\n# This setting supercedes an older setting named `perspectives`. The old format\n# is still supported for backwards-compatibility, but it is deprecated.\n#\n# 'trusted_key_servers' defaults to matrix.org, but using it will generate a\n# warning on start-up. To suppress this warning, set\n# 'suppress_key_server_warning' to true.\n#\n# Options for each entry in the list include:\n#\n#    server_name: the name of the server. required.\n#\n#    verify_keys: an optional map from key id to base64-encoded public key.\n#       If specified, we will check that the response is signed by at least\n#       one of the given keys.\n#\n#    accept_keys_insecurely: a boolean. Normally, if `verify_keys` is unset,\n#       and federation_verify_certificates is not `true`, synapse will refuse\n#       to start, because this would allow anyone who can spoof DNS responses\n#       to masquerade as the trusted key server. If you know what you are doing\n#       and are sure that your network environment provides a secure connection\n#       to the key server, you can set this to `true` to override this\n#       behaviour.\n#\n# An example configuration might look like:\n#\n#trusted_key_servers:\n#  - server_name: \"my_trusted_server.example.com\"\n#    verify_keys:\n#      \"ed25519:auto\": \"abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr\"\n#  - server_name: \"my_other_trusted_server.example.com\"\n#\n\n# Uncomment the following to disable the warning that is emitted when the\n# trusted_key_servers include 'matrix.org'.\n#\nsuppress_key_server_warning: true\n\n\n# The signing keys to use when acting as a trusted key server. If not specified\n# defaults to the server signing key.\n#\n# Can contain multiple keys, one per line.\n#\n#key_server_signing_keys_path: \"key_server_signing_keys.key\"\n\n\n# Enable SAML2 for registration and login. Uses pysaml2.\n#\n# At least one of `sp_config` or `config_path` must be set in this section to\n# enable SAML login.\n#\n# (You will probably also want to set the following options to `false` to\n# disable the regular login/registration flows:\n#   * enable_registration\n#   * password_config.enabled\n#\n# Once SAML support is enabled, a metadata file will be exposed at\n# https://<server>:<port>/_matrix/saml2/metadata.xml, which you may be able to\n# use to configure your SAML IdP with. Alternatively, you can manually configure\n# the IdP to use an ACS location of\n# https://<server>:<port>/_matrix/saml2/authn_response.\n#\nsaml2_config:\n  # `sp_config` is the configuration for the pysaml2 Service Provider.\n  # See pysaml2 docs for format of config.\n  #\n  # Default values will be used for the 'entityid' and 'service' settings,\n  # so it is not normally necessary to specify them unless you need to\n  # override them.\n  #\n  #sp_config:\n  #  # point this to the IdP's metadata. You can use either a local file or\n  #  # (preferably) a URL.\n  #  metadata:\n  #    #local: [\"saml2/idp.xml\"]\n  #    remote:\n  #      - url: https://our_idp/metadata.xml\n  #\n  #  # By default, the user has to go to our login page first. If you'd like\n  #  # to allow IdP-initiated login, set 'allow_unsolicited: true' in a\n  #  # 'service.sp' section:\n  #  #\n  #  #service:\n  #  #  sp:\n  #  #    allow_unsolicited: true\n  #\n  #  # The examples below are just used to generate our metadata xml, and you\n  #  # may well not need them, depending on your setup. Alternatively you\n  #  # may need a whole lot more detail - see the pysaml2 docs!\n  #\n  #  description: [\"My awesome SP\", \"en\"]\n  #  name: [\"Test SP\", \"en\"]\n  #\n  #  organization:\n  #    name: Example com\n  #    display_name:\n  #      - [\"Example co\", \"en\"]\n  #    url: \"http://example.com\"\n  #\n  #  contact_person:\n  #    - given_name: Bob\n  #      sur_name: \"the Sysadmin\"\n  #      email_address\": [\"admin@example.com\"]\n  #      contact_type\": technical\n\n  # Instead of putting the config inline as above, you can specify a\n  # separate pysaml2 configuration file:\n  #\n  #config_path: \"CONFDIR/sp_conf.py\"\n\n  # The lifetime of a SAML session. This defines how long a user has to\n  # complete the authentication process, if allow_unsolicited is unset.\n  # The default is 15 minutes.\n  #\n  #saml_session_lifetime: 5m\n\n  # An external module can be provided here as a custom solution to\n  # mapping attributes returned from a saml provider onto a matrix user.\n  #\n  user_mapping_provider:\n    # The custom module's class. Uncomment to use a custom module.\n    #\n    #module: mapping_provider.SamlMappingProvider\n\n    # Custom configuration values for the module. Below options are\n    # intended for the built-in provider, they should be changed if\n    # using a custom module. This section will be passed as a Python\n    # dictionary to the module's `parse_config` method.\n    #\n    config:\n      # The SAML attribute (after mapping via the attribute maps) to use\n      # to derive the Matrix ID from. 'uid' by default.\n      #\n      # Note: This used to be configured by the\n      # saml2_config.mxid_source_attribute option. If that is still\n      # defined, its value will be used instead.\n      #\n      #mxid_source_attribute: displayName\n\n      # The mapping system to use for mapping the saml attribute onto a\n      # matrix ID.\n      #\n      # Options include:\n      #  * 'hexencode' (which maps unpermitted characters to '=xx')\n      #  * 'dotreplace' (which replaces unpermitted characters with\n      #     '.').\n      # The default is 'hexencode'.\n      #\n      # Note: This used to be configured by the\n      # saml2_config.mxid_mapping option. If that is still defined, its\n      # value will be used instead.\n      #\n      #mxid_mapping: dotreplace\n\n  # In previous versions of synapse, the mapping from SAML attribute to\n  # MXID was always calculated dynamically rather than stored in a\n  # table. For backwards- compatibility, we will look for user_ids\n  # matching such a pattern before creating a new account.\n  #\n  # This setting controls the SAML attribute which will be used for this\n  # backwards-compatibility lookup. Typically it should be 'uid', but if\n  # the attribute maps are changed, it may be necessary to change it.\n  #\n  # The default is 'uid'.\n  #\n  #grandfathered_mxid_source_attribute: upn\n\n  # Directory in which Synapse will try to find the template files below.\n  # If not set, default templates from within the Synapse package will be used.\n  #\n  # DO NOT UNCOMMENT THIS SETTING unless you want to customise the templates.\n  # If you *do* uncomment it, you will need to make sure that all the templates\n  # below are in the directory.\n  #\n  # Synapse will look for the following templates in this directory:\n  #\n  # * HTML page to display to users if something goes wrong during the\n  #   authentication process: 'saml_error.html'.\n  #\n  #   When rendering, this template is given the following variables:\n  #     * code: an HTML error code corresponding to the error that is being\n  #       returned (typically 400 or 500)\n  #\n  #     * msg: a textual message describing the error.\n  #\n  #   The variables will automatically be HTML-escaped.\n  #\n  # You can see the default templates at:\n  # https://github.com/matrix-org/synapse/tree/master/synapse/res/templates\n  #\n  #template_dir: \"res/templates\"\n\n\n# OpenID Connect integration. The following settings can be used to make Synapse\n# use an OpenID Connect Provider for authentication, instead of its internal\n# password database.\n#\n# See https://github.com/matrix-org/synapse/blob/master/docs/openid.md.\n#\noidc_config:\n  # Uncomment the following to enable authorization against an OpenID Connect\n  # server. Defaults to false.\n  #\n  #enabled: true\n\n  # Uncomment the following to disable use of the OIDC discovery mechanism to\n  # discover endpoints. Defaults to true.\n  #\n  #discover: false\n\n  # the OIDC issuer. Used to validate tokens and (if discovery is enabled) to\n  # discover the provider's endpoints.\n  #\n  # Required if 'enabled' is true.\n  #\n  #issuer: \"https://accounts.example.com/\"\n\n  # oauth2 client id to use.\n  #\n  # Required if 'enabled' is true.\n  #\n  #client_id: \"provided-by-your-issuer\"\n\n  # oauth2 client secret to use.\n  #\n  # Required if 'enabled' is true.\n  #\n  #client_secret: \"provided-by-your-issuer\"\n\n  # auth method to use when exchanging the token.\n  # Valid values are 'client_secret_basic' (default), 'client_secret_post' and\n  # 'none'.\n  #\n  #client_auth_method: client_secret_post\n\n  # list of scopes to request. This should normally include the \"openid\" scope.\n  # Defaults to [\"openid\"].\n  #\n  #scopes: [\"openid\", \"profile\"]\n\n  # the oauth2 authorization endpoint. Required if provider discovery is disabled.\n  #\n  #authorization_endpoint: \"https://accounts.example.com/oauth2/auth\"\n\n  # the oauth2 token endpoint. Required if provider discovery is disabled.\n  #\n  #token_endpoint: \"https://accounts.example.com/oauth2/token\"\n\n  # the OIDC userinfo endpoint. Required if discovery is disabled and the\n  # \"openid\" scope is not requested.\n  #\n  #userinfo_endpoint: \"https://accounts.example.com/userinfo\"\n\n  # URI where to fetch the JWKS. Required if discovery is disabled and the\n  # \"openid\" scope is used.\n  #\n  #jwks_uri: \"https://accounts.example.com/.well-known/jwks.json\"\n\n  # Uncomment to skip metadata verification. Defaults to false.\n  #\n  # Use this if you are connecting to a provider that is not OpenID Connect\n  # compliant.\n  # Avoid this in production.\n  #\n  #skip_verification: true\n\n  # An external module can be provided here as a custom solution to mapping\n  # attributes returned from a OIDC provider onto a matrix user.\n  #\n  user_mapping_provider:\n    # The custom module's class. Uncomment to use a custom module.\n    # Default is 'synapse.handlers.oidc_handler.JinjaOidcMappingProvider'.\n    #\n    # See https://github.com/matrix-org/synapse/blob/master/docs/sso_mapping_providers.md#openid-mapping-providers\n    # for information on implementing a custom mapping provider.\n    #\n    #module: mapping_provider.OidcMappingProvider\n\n    # Custom configuration values for the module. This section will be passed as\n    # a Python dictionary to the user mapping provider module's `parse_config`\n    # method.\n    #\n    # The examples below are intended for the default provider: they should be\n    # changed if using a custom provider.\n    #\n    config:\n      # name of the claim containing a unique identifier for the user.\n      # Defaults to `sub`, which OpenID Connect compliant providers should provide.\n      #\n      #subject_claim: \"sub\"\n      # Jinja2 template for the localpart of the MXID.\n      #\n      # When rendering, this template is given the following variables:\n      #   * user: The claims returned by the UserInfo Endpoint and/or in the ID\n      #     Token\n      #\n      # This must be configured if using the default mapping provider.\n      #\n      # Jinja2 template for the display name to set on first login.\n      #\n      # If unset, no displayname will be set.\n      #\n\n# Enable CAS for registration and login.\n#\n#cas_config:\n#   enabled: true\n#   server_url: \"https://cas-server.com\"\n#   service_url: \"https://homeserver.domain.com:8448\"\n#   #displayname_attribute: name\n#   #required_attributes:\n#   #    name: value\n\n\n# Additional settings to use with single-sign on systems such as OpenID Connect,\n# SAML2 and CAS.\n#\nsso:\n    # A list of client URLs which are whitelisted so that the user does not\n    # have to confirm giving access to their account to the URL. Any client\n    # whose URL starts with an entry in the following list will not be subject\n    # to an additional confirmation step after the SSO login is completed.\n    #\n    # WARNING: An entry such as \"https://my.client\" is insecure, because it\n    # will also match \"https://my.client.evil.site\", exposing your users to\n    # phishing attacks from evil.site. To avoid this, include a slash after the\n    # hostname: \"https://my.client/\".\n    #\n    # If public_baseurl is set, then the login fallback page (used by clients\n    # that don't natively support the required login flows) is whitelisted in\n    # addition to any URLs in this list.\n    #\n    # By default, this list is empty.\n    #\n    #client_whitelist:\n    #  - https://riot.im/develop\n    #  - https://my.custom.client/\n\n    # Directory in which Synapse will try to find the template files below.\n    # If not set, default templates from within the Synapse package will be used.\n    #\n    # DO NOT UNCOMMENT THIS SETTING unless you want to customise the templates.\n    # If you *do* uncomment it, you will need to make sure that all the templates\n    # below are in the directory.\n    #\n    # Synapse will look for the following templates in this directory:\n    #\n    # * HTML page for a confirmation step before redirecting back to the client\n    #   with the login token: 'sso_redirect_confirm.html'.\n    #\n    #   When rendering, this template is given three variables:\n    #     * redirect_url: the URL the user is about to be redirected to. Needs\n    #                     manual escaping (see\n    #                     https://jinja.palletsprojects.com/en/2.11.x/templates/#html-escaping).\n    #\n    #     * display_url: the same as `redirect_url`, but with the query\n    #                    parameters stripped. The intention is to have a\n    #                    human-readable URL to show to users, not to use it as\n    #                    the final address to redirect to. Needs manual escaping\n    #                    (see https://jinja.palletsprojects.com/en/2.11.x/templates/#html-escaping).\n    #\n    #     * server_name: the homeserver's name.\n    #\n    # * HTML page which notifies the user that they are authenticating to confirm\n    #   an operation on their account during the user interactive authentication\n    #   process: 'sso_auth_confirm.html'.\n    #\n    #   When rendering, this template is given the following variables:\n    #     * redirect_url: the URL the user is about to be redirected to. Needs\n    #                     manual escaping (see\n    #                     https://jinja.palletsprojects.com/en/2.11.x/templates/#html-escaping).\n    #\n    #     * description: the operation which the user is being asked to confirm\n    #\n    # * HTML page shown after a successful user interactive authentication session:\n    #   'sso_auth_success.html'.\n    #\n    #   Note that this page must include the JavaScript which notifies of a successful authentication\n    #   (see https://matrix.org/docs/spec/client_server/r0.6.0#fallback).\n    #\n    #   This template has no additional variables.\n    #\n    # * HTML page shown during single sign-on if a deactivated user (according to Synapse's database)\n    #   attempts to login: 'sso_account_deactivated.html'.\n    #\n    #   This template has no additional variables.\n    #\n    # * HTML page to display to users if something goes wrong during the\n    #   OpenID Connect authentication process: 'sso_error.html'.\n    #\n    #   When rendering, this template is given two variables:\n    #     * error: the technical name of the error\n    #     * error_description: a human-readable message for the error\n    #\n    # You can see the default templates at:\n    # https://github.com/matrix-org/synapse/tree/master/synapse/res/templates\n    #\n    #template_dir: \"res/templates\"\n\n\n# JSON web token integration. The following settings can be used to make\n# Synapse JSON web tokens for authentication, instead of its internal\n# password database.\n#\n# Each JSON Web Token needs to contain a \"sub\" (subject) claim, which is\n# used as the localpart of the mxid.\n#\n# Additionally, the expiration time (\"exp\"), not before time (\"nbf\"),\n# and issued at (\"iat\") claims are validated if present.\n#\n# Note that this is a non-standard login type and client support is\n# expected to be non-existant.\n#\n# See https://github.com/matrix-org/synapse/blob/master/docs/jwt.md.\n#\n#jwt_config:\n    # Uncomment the following to enable authorization using JSON web\n    # tokens. Defaults to false.\n    #\n    #enabled: true\n\n    # This is either the private shared secret or the public key used to\n    # decode the contents of the JSON web token.\n    #\n    # Required if 'enabled' is true.\n    #\n    #secret: \"provided-by-your-issuer\"\n\n    # The algorithm used to sign the JSON web token.\n    #\n    # Supported algorithms are listed at\n    # https://pyjwt.readthedocs.io/en/latest/algorithms.html\n    #\n    # Required if 'enabled' is true.\n    #\n    #algorithm: \"provided-by-your-issuer\"\n\n    # The issuer to validate the \"iss\" claim against.\n    #\n    # Optional, if provided the \"iss\" claim will be required and\n    # validated for all JSON web tokens.\n    #\n    #issuer: \"provided-by-your-issuer\"\n\n    # A list of audiences to validate the \"aud\" claim against.\n    #\n    # Optional, if provided the \"aud\" claim will be required and\n    # validated for all JSON web tokens.\n    #\n    # Note that if the \"aud\" claim is included in a JSON web token then\n    # validation will fail without configuring audiences.\n    #\n    #audiences:\n    #    - \"provided-by-your-issuer\"\n\n\npassword_config:\n   # Uncomment to disable password login\n   #\n   #enabled: false\n\n   # Uncomment to disable authentication against the local password\n   # database. This is ignored if `enabled` is false, and is only useful\n   # if you have other password_providers.\n   #\n   #localdb_enabled: false\n\n   # Uncomment and change to a secret random string for extra security.\n   # DO NOT CHANGE THIS AFTER INITIAL SETUP!\n   #\n   #pepper: \"EVEN_MORE_SECRET\"\n\n   # Define and enforce a password policy. Each parameter is optional.\n   # This is an implementation of MSC2000.\n   #\n   policy:\n      # Whether to enforce the password policy.\n      # Defaults to 'false'.\n      #\n      #enabled: true\n\n      # Minimum accepted length for a password.\n      # Defaults to 0.\n      #\n      #minimum_length: 15\n\n      # Whether a password must contain at least one digit.\n      # Defaults to 'false'.\n      #\n      #require_digit: true\n\n      # Whether a password must contain at least one symbol.\n      # A symbol is any character that's not a number or a letter.\n      # Defaults to 'false'.\n      #\n      #require_symbol: true\n\n      # Whether a password must contain at least one lowercase letter.\n      # Defaults to 'false'.\n      #\n      #require_lowercase: true\n\n      # Whether a password must contain at least one lowercase letter.\n      # Defaults to 'false'.\n      #\n      #require_uppercase: true\n\n\n# Configuration for sending emails from Synapse.\n#\nemail:\n  enable_notifs: ${mailEnabled?c}\n  notif_from: ${mailFrom}\n  smtp_host: ${SMTP_HOSTNAME}\n  smtp_port: ${SMTP_PORT}\n\n\n  # notif_from defines the \"From\" address to use when sending emails.\n  # It must be set if email sending is enabled.\n  #\n  # The placeholder '%(app)s' will be replaced by the application name,\n  # which is normally 'app_name' (below), but may be overridden by the\n  # Matrix client application.\n  #\n  # Note that the placeholder must be written '%(app)s', including the\n  # trailing 's'.\n  #\n  # Uncomment the following to enable sending emails for messages that the user\n  # has missed. Disabled by default.\n  #\n  #enable_notifs: true\n\n  # Uncomment the following to disable automatic subscription to email\n  # notifications for new users. Enabled by default.\n  #\n  #notif_for_new_users: false\n\n  # Custom URL for client links within the email notifications. By default\n  # links will be based on \"https://matrix.to\".\n  #\n  # (This setting used to be called riot_base_url; the old name is still\n  # supported for backwards-compatibility but is now deprecated.)\n  client_base_url: element-${RELEASE_NAME}.${DOMAIN_CODENAME}.${BASE_URL}\n\n  # Configure the time that a validation email will expire after sending.\n  # Defaults to 1h.\n  #\n  #validation_token_lifetime: 15m\n\n  # DO NOT UNCOMMENT THIS SETTING unless you want to customise the templates.\n  # If you *do* uncomment it, you will need to make sure that all the templates\n  # below are in the directory.\n  #\n  # Synapse will look for the following templates in this directory:\n  #\n  # * The contents of email notifications of missed events: 'notif_mail.html' and\n  #   'notif_mail.txt'.\n  #\n  # * The contents of account expiry notice emails: 'notice_expiry.html' and\n  #   'notice_expiry.txt'.\n  #\n  # * The contents of password reset emails sent by the homeserver:\n  #   'password_reset.html' and 'password_reset.txt'\n  #\n  # * HTML pages for success and failure that a user will see when they follow\n  #   the link in the password reset email: 'password_reset_success.html' and\n  #   'password_reset_failure.html'\n  #\n  # * The contents of address verification emails sent during registration:\n  #   'registration.html' and 'registration.txt'\n  #\n  # * HTML pages for success and failure that a user will see when they follow\n  #   the link in an address verification email sent during registration:\n  #   'registration_success.html' and 'registration_failure.html'\n  #\n  # * The contents of address verification emails sent when an address is added\n  #   to a Matrix account: 'add_threepid.html' and 'add_threepid.txt'\n  #\n  # * HTML pages for success and failure that a user will see when they follow\n  #   the link in an address verification email sent when an address is added\n  #   to a Matrix account: 'add_threepid_success.html' and\n  #   'add_threepid_failure.html'\n  #\n  # You can see the default templates at:\n  # https://github.com/matrix-org/synapse/tree/master/synapse/res/templates\n  #\n  #template_dir: \"res/templates\"\n\n  # Subjects to use when sending emails from Synapse.\n  #\n  # The placeholder '%(app)s' will be replaced with the value of the 'app_name'\n  # setting above, or by a value dictated by the Matrix client application.\n  #\n  # If a subject isn't overridden in this configuration file, the value used as\n  # its example will be used.\n  #\n  #subjects:\n\n    # Subjects for notification emails.\n    #\n    # On top of the '%(app)s' placeholder, these can use the following\n    # placeholders:\n    #\n    #   * '%(person)s', which will be replaced by the display name of the user(s)\n    #      that sent the message(s), e.g. \"Alice and Bob\".\n    #   * '%(room)s', which will be replaced by the name of the room the\n    #      message(s) have been sent to, e.g. \"My super room\".\n    #\n    # See the example provided for each setting to see which placeholder can be\n    # used and how to use them.\n    #\n    # Subject to use to notify about one message from one or more user(s) in a\n    # room which has a name.\n    #message_from_person_in_room: \"[%(app)s] You have a message on %(app)s from %(person)s in the %(room)s room...\"\n    #\n    # Subject to use to notify about one message from one or more user(s) in a\n    # room which doesn't have a name.\n    #message_from_person: \"[%(app)s] You have a message on %(app)s from %(person)s...\"\n    #\n    # Subject to use to notify about multiple messages from one or more users in\n    # a room which doesn't have a name.\n    #messages_from_person: \"[%(app)s] You have messages on %(app)s from %(person)s...\"\n    #\n    # Subject to use to notify about multiple messages in a room which has a\n    # name.\n    #messages_in_room: \"[%(app)s] You have messages on %(app)s in the %(room)s room...\"\n    #\n    # Subject to use to notify about multiple messages in multiple rooms.\n    #messages_in_room_and_others: \"[%(app)s] You have messages on %(app)s in the %(room)s room and others...\"\n    #\n    # Subject to use to notify about multiple messages from multiple persons in\n    # multiple rooms. This is similar to the setting above except it's used when\n    # the room in which the notification was triggered has no name.\n    #messages_from_person_and_others: \"[%(app)s] You have messages on %(app)s from %(person)s and others...\"\n    #\n    # Subject to use to notify about an invite to a room which has a name.\n    #invite_from_person_to_room: \"[%(app)s] %(person)s has invited you to join the %(room)s room on %(app)s...\"\n    #\n    # Subject to use to notify about an invite to a room which doesn't have a\n    # name.\n    #invite_from_person: \"[%(app)s] %(person)s has invited you to chat on %(app)s...\"\n\n    # Subject for emails related to account administration.\n    #\n    # On top of the '%(app)s' placeholder, these one can use the\n    # '%(server_name)s' placeholder, which will be replaced by the value of the\n    # 'server_name' setting in your Synapse configuration.\n    #\n    # Subject to use when sending a password reset email.\n    #password_reset: \"[%(server_name)s] Password reset\"\n    #\n    # Subject to use when sending a verification email to assert an address's\n    # ownership.\n    #email_validation: \"[%(server_name)s] Validate your email\"\n\n\n# Password providers allow homeserver administrators to integrate\n# their Synapse installation with existing authentication methods\n# ex. LDAP, external tokens, etc.\n#\n# For more information and known implementations, please see\n# https://github.com/matrix-org/synapse/blob/master/docs/password_auth_providers.md\n#\n# Note: instances wishing to use SAML or CAS authentication should\n# instead use the `saml2_config` or `cas_config` options,\n# respectively.\n#\npassword_providers:\n#    # Example config for an LDAP auth provider\n#    - module: \"ldap_auth_provider.LdapAuthProvider\"\n#      config:\n#        enabled: true\n#        uri: \"ldap://ldap.example.com:389\"\n#        start_tls: true\n#        base: \"ou=users,dc=example,dc=com\"\n#        attributes:\n#           uid: \"cn\"\n#           mail: \"email\"\n#           name: \"givenName\"\n#        #bind_dn:\n#        #bind_password:\n#        #filter: \"(objectClass=posixAccount)\"\n\n\n\n# Clients requesting push notifications can either have the body of\n# the message sent in the notification poke along with other details\n# like the sender, or just the event ID and room ID (`event_id_only`).\n# If clients choose the former, this option controls whether the\n# notification request includes the content of the event (other details\n# like the sender are still included). For `event_id_only` push, it\n# has no effect.\n#\n# For modern android devices the notification content will still appear\n# because it is loaded by the app. iPhone, however will send a\n# notification saying only that a message arrived and who it came from.\n#\n#push:\n#  include_content: true\n\n\n# Spam checkers are third-party modules that can block specific actions\n# of local users, such as creating rooms and registering undesirable\n# usernames, as well as remote users by redacting incoming events.\n#\nspam_checker:\n   #- module: \"my_custom_project.SuperSpamChecker\"\n   #  config:\n   #    example_option: 'things'\n   #- module: \"some_other_project.BadEventStopper\"\n   #  config:\n   #    example_stop_events_from: ['@bad:example.com']\n\n\n## Rooms ##\n\n# Controls whether locally-created rooms should be end-to-end encrypted by\n# default.\n#\n# Possible options are \"all\", \"invite\", and \"off\". They are defined as:\n#\n# * \"all\": any locally-created room\n# * \"invite\": any room created with the \"private_chat\" or \"trusted_private_chat\"\n#             room creation presets\n# * \"off\": this option will take no effect\n#\n# The default value is \"off\".\n#\n# Note that this option will only affect rooms created after it is set. It\n# will also not affect rooms created by other servers.\n#\nencryption_enabled_by_default_for_room_type: invite\n\n\n# Uncomment to allow non-server-admin users to create groups on this server\n#\n#enable_group_creation: true\n\n# If enabled, non server admins can only create groups with local parts\n# starting with this prefix\n#\n#group_creation_prefix: \"unofficial/\"\n\n\n\n# User Directory configuration\n#\n# 'enabled' defines whether users can search the user directory. If\n# false then empty responses are returned to all queries. Defaults to\n# true.\n#\n# 'search_all_users' defines whether to search all users visible to your HS\n# when searching the user directory, rather than limiting to users visible\n# in public rooms.  Defaults to false.  If you set it True, you'll have to\n# rebuild the user_directory search indexes, see\n# https://github.com/matrix-org/synapse/blob/master/docs/user_directory.md\n#\n#user_directory:\n#  enabled: true\n#  search_all_users: false\n\n\n# User Consent configuration\n#\n# for detailed instructions, see\n# https://github.com/matrix-org/synapse/blob/master/docs/consent_tracking.md\n#\n# Parts of this section are required if enabling the 'consent' resource under\n# 'listeners', in particular 'template_dir' and 'version'.\n#\n# 'template_dir' gives the location of the templates for the HTML forms.\n# This directory should contain one subdirectory per language (eg, 'en', 'fr'),\n# and each language directory should contain the policy document (named as\n# '<version>.html') and a success page (success.html).\n#\n# 'version' specifies the 'current' version of the policy document. It defines\n# the version to be served by the consent resource if there is no 'v'\n# parameter.\n#\n# 'server_notice_content', if enabled, will send a user a \"Server Notice\"\n# asking them to consent to the privacy policy. The 'server_notices' section\n# must also be configured for this to work. Notices will *not* be sent to\n# guest users unless 'send_server_notice_to_guests' is set to true.\n#\n# 'block_events_error', if set, will block any attempts to send events\n# until the user consents to the privacy policy. The value of the setting is\n# used as the text of the error.\n#\n# 'require_at_registration', if enabled, will add a step to the registration\n# process, similar to how captcha works. Users will be required to accept the\n# policy before their account is created.\n#\n# 'policy_name' is the display name of the policy users will see when registering\n# for an account. Has no effect unless `require_at_registration` is enabled.\n# Defaults to \"Privacy Policy\".\n#\n#user_consent:\n#  template_dir: res/templates/privacy\n#  version: 1.0\n#  server_notice_content:\n#    msgtype: m.text\n#    body: >-\n#      To continue using this homeserver you must review and agree to the\n#      terms and conditions at %(consent_uri)s\n#  send_server_notice_to_guests: true\n#  block_events_error: >-\n#    To continue using this homeserver you must review and agree to the\n#    terms and conditions at %(consent_uri)s\n#  require_at_registration: false\n#  policy_name: Privacy Policy\n#\n\n\n\n# Local statistics collection. Used in populating the room directory.\n#\n# 'bucket_size' controls how large each statistics timeslice is. It can\n# be defined in a human readable short form -- e.g. \"1d\", \"1y\".\n#\n# 'retention' controls how long historical statistics will be kept for.\n# It can be defined in a human readable short form -- e.g. \"1d\", \"1y\".\n#\n#\n#stats:\n#   enabled: true\n#   bucket_size: 1d\n#   retention: 1y\n\n\n# Server Notices room configuration\n#\n# Uncomment this section to enable a room which can be used to send notices\n# from the server to users. It is a special room which cannot be left; notices\n# come from a special \"notices\" user id.\n#\n# If you uncomment this section, you *must* define the system_mxid_localpart\n# setting, which defines the id of the user which will be used to send the\n# notices.\n#\n# It's also possible to override the room name, the display name of the\n# \"notices\" user, and the avatar for the user.\n#\n#server_notices:\n#  system_mxid_localpart: notices\n#  system_mxid_display_name: \"Server Notices\"\n#  system_mxid_avatar_url: \"mxc://server.com/oumMVlgDnLYFaPVkExemNVVZ\"\n#  room_name: \"Server Notices\"\n\n\n\n# Uncomment to disable searching the public room list. When disabled\n# blocks searching local and remote room lists for local and remote\n# users by always returning an empty list for all queries.\n#\n#enable_room_list_search: false\n\n# The `alias_creation` option controls who's allowed to create aliases\n# on this server.\n#\n# The format of this option is a list of rules that contain globs that\n# match against user_id, room_id and the new alias (fully qualified with\n# server name). The action in the first rule that matches is taken,\n# which can currently either be \"allow\" or \"deny\".\n#\n# Missing user_id/room_id/alias fields default to \"*\".\n#\n# If no rules match the request is denied. An empty list means no one\n# can create aliases.\n#\n# Options for the rules include:\n#\n#   user_id: Matches against the creator of the alias\n#   alias: Matches against the alias being created\n#   room_id: Matches against the room ID the alias is being pointed at\n#   action: Whether to \"allow\" or \"deny\" the request if the rule matches\n#\n# The default is:\n#\n#alias_creation_rules:\n#  - user_id: \"*\"\n#    alias: \"*\"\n#    room_id: \"*\"\n#    action: allow\n\n# The `room_list_publication_rules` option controls who can publish and\n# which rooms can be published in the public room list.\n#\n# The format of this option is the same as that for\n# `alias_creation_rules`.\n#\n# If the room has one or more aliases associated with it, only one of\n# the aliases needs to match the alias rule. If there are no aliases\n# then only rules with `alias: *` match.\n#\n# If no rules match the request is denied. An empty list means no one\n# can publish rooms.\n#\n# Options for the rules include:\n#\n#   user_id: Matches agaisnt the creator of the alias\n#   room_id: Matches against the room ID being published\n#   alias: Matches against any current local or canonical aliases\n#            associated with the room\n#   action: Whether to \"allow\" or \"deny\" the request if the rule matches\n#\n# The default is:\n#\n#room_list_publication_rules:\n#  - user_id: \"*\"\n#    alias: \"*\"\n#    room_id: \"*\"\n#    action: allow\n\n\n# Server admins can define a Python module that implements extra rules for\n# allowing or denying incoming events. In order to work, this module needs to\n# override the methods defined in synapse/events/third_party_rules.py.\n#\n# This feature is designed to be used in closed federations only, where each\n# participating server enforces the same rules.\n#\n#third_party_event_rules:\n#  module: \"my_custom_project.SuperRulesSet\"\n#  config:\n#    example_option: 'things'\n\n\n## Opentracing ##\n\n# These settings enable opentracing, which implements distributed tracing.\n# This allows you to observe the causal chains of events across servers\n# including requests, key lookups etc., across any server running\n# synapse or any other other services which supports opentracing\n# (specifically those implemented with Jaeger).\n#\nopentracing:\n    # tracing is disabled by default. Uncomment the following line to enable it.\n    #\n    #enabled: true\n\n    # The list of homeservers we wish to send and receive span contexts and span baggage.\n    # See docs/opentracing.rst\n    # This is a list of regexes which are matched against the server_name of the\n    # homeserver.\n    #\n    # By defult, it is empty, so no servers are matched.\n    #\n    #homeserver_whitelist:\n    #  - \".*\"\n\n    # Jaeger can be configured to sample traces at different rates.\n    # All configuration options provided by Jaeger can be set here.\n    # Jaeger's configuration mostly related to trace sampling which\n    # is documented here:\n    # https://www.jaegertracing.io/docs/1.13/sampling/.\n    #\n    #jaeger_config:\n    #  sampler:\n    #    type: const\n    #    param: 1\n\n    #  Logging whether spans were started and reported\n    #\n    #  logging:\n    #    false\n"
                }
            ]
        }
    }
}
